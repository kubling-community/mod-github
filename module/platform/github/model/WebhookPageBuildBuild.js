/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PageBuildError from './PageBuildError';
import User from './User';

/**
 * The WebhookPageBuildBuild model module.
 * @module model/WebhookPageBuildBuild
 * @version 1.1.4
 */
class WebhookPageBuildBuild {
    /**
     * Constructs a new <code>WebhookPageBuildBuild</code>.
     * The [List GitHub Pages builds](https://docs.github.com/rest/pages/pages#list-github-pages-builds) itself.
     * @alias module:model/WebhookPageBuildBuild
     * @param commit {String} 
     * @param createdAt {String} 
     * @param duration {Number} 
     * @param error {module:model/PageBuildError} 
     * @param pusher {module:model/User} 
     * @param status {String} 
     * @param updatedAt {String} 
     * @param url {String} 
     */
    constructor(commit, createdAt, duration, error, pusher, status, updatedAt, url) { 
        
        WebhookPageBuildBuild.initialize(this, commit, createdAt, duration, error, pusher, status, updatedAt, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, commit, createdAt, duration, error, pusher, status, updatedAt, url) { 
        obj['commit'] = commit;
        obj['created_at'] = createdAt;
        obj['duration'] = duration;
        obj['error'] = error;
        obj['pusher'] = pusher;
        obj['status'] = status;
        obj['updated_at'] = updatedAt;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>WebhookPageBuildBuild</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookPageBuildBuild} obj Optional instance to populate.
     * @return {module:model/WebhookPageBuildBuild} The populated <code>WebhookPageBuildBuild</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookPageBuildBuild();

            if (data.hasOwnProperty('commit')) {
                obj['commit'] = ApiClient.convertToType(data['commit'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = PageBuildError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('pusher')) {
                obj['pusher'] = User.constructFromObject(data['pusher']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookPageBuildBuild</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookPageBuildBuild</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookPageBuildBuild.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['commit'] && !(typeof data['commit'] === 'string' || data['commit'] instanceof String)) {
            throw new Error("Expected the field `commit` to be a primitive type in the JSON string but got " + data['commit']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          PageBuildError.validateJSON(data['error']);
        }
        // validate the optional field `pusher`
        if (data['pusher']) { // data not null
          User.validateJSON(data['pusher']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

WebhookPageBuildBuild.RequiredProperties = ["commit", "created_at", "duration", "error", "pusher", "status", "updated_at", "url"];

/**
 * @member {String} commit
 */
WebhookPageBuildBuild.prototype['commit'] = undefined;

/**
 * @member {String} created_at
 */
WebhookPageBuildBuild.prototype['created_at'] = undefined;

/**
 * @member {Number} duration
 */
WebhookPageBuildBuild.prototype['duration'] = undefined;

/**
 * @member {module:model/PageBuildError} error
 */
WebhookPageBuildBuild.prototype['error'] = undefined;

/**
 * @member {module:model/User} pusher
 */
WebhookPageBuildBuild.prototype['pusher'] = undefined;

/**
 * @member {String} status
 */
WebhookPageBuildBuild.prototype['status'] = undefined;

/**
 * @member {String} updated_at
 */
WebhookPageBuildBuild.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
WebhookPageBuildBuild.prototype['url'] = undefined;






export default WebhookPageBuildBuild;

