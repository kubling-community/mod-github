/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Traffic model module.
 * @module model/Traffic
 * @version 1.1.4
 */
class Traffic {
    /**
     * Constructs a new <code>Traffic</code>.
     * @alias module:model/Traffic
     * @param timestamp {Date} 
     * @param uniques {Number} 
     * @param count {Number} 
     */
    constructor(timestamp, uniques, count) { 
        
        Traffic.initialize(this, timestamp, uniques, count);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, timestamp, uniques, count) { 
        obj['timestamp'] = timestamp;
        obj['uniques'] = uniques;
        obj['count'] = count;
    }

    /**
     * Constructs a <code>Traffic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Traffic} obj Optional instance to populate.
     * @return {module:model/Traffic} The populated <code>Traffic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Traffic();

            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('uniques')) {
                obj['uniques'] = ApiClient.convertToType(data['uniques'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Traffic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Traffic</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Traffic.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Traffic.RequiredProperties = ["timestamp", "uniques", "count"];

/**
 * @member {Date} timestamp
 */
Traffic.prototype['timestamp'] = undefined;

/**
 * @member {Number} uniques
 */
Traffic.prototype['uniques'] = undefined;

/**
 * @member {Number} count
 */
Traffic.prototype['count'] = undefined;






export default Traffic;

