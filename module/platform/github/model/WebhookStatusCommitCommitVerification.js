/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookStatusCommitCommitVerification model module.
 * @module model/WebhookStatusCommitCommitVerification
 * @version 1.1.4
 */
class WebhookStatusCommitCommitVerification {
    /**
     * Constructs a new <code>WebhookStatusCommitCommitVerification</code>.
     * @alias module:model/WebhookStatusCommitCommitVerification
     * @param payload {String} 
     * @param reason {module:model/WebhookStatusCommitCommitVerification.ReasonEnum} 
     * @param signature {String} 
     * @param verified {Boolean} 
     */
    constructor(payload, reason, signature, verified) { 
        
        WebhookStatusCommitCommitVerification.initialize(this, payload, reason, signature, verified);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, payload, reason, signature, verified) { 
        obj['payload'] = payload;
        obj['reason'] = reason;
        obj['signature'] = signature;
        obj['verified'] = verified;
    }

    /**
     * Constructs a <code>WebhookStatusCommitCommitVerification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookStatusCommitCommitVerification} obj Optional instance to populate.
     * @return {module:model/WebhookStatusCommitCommitVerification} The populated <code>WebhookStatusCommitCommitVerification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookStatusCommitCommitVerification();

            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
            }
            if (data.hasOwnProperty('verified')) {
                obj['verified'] = ApiClient.convertToType(data['verified'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookStatusCommitCommitVerification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookStatusCommitCommitVerification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookStatusCommitCommitVerification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['payload'] && !(typeof data['payload'] === 'string' || data['payload'] instanceof String)) {
            throw new Error("Expected the field `payload` to be a primitive type in the JSON string but got " + data['payload']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['signature'] && !(typeof data['signature'] === 'string' || data['signature'] instanceof String)) {
            throw new Error("Expected the field `signature` to be a primitive type in the JSON string but got " + data['signature']);
        }

        return true;
    }


}

WebhookStatusCommitCommitVerification.RequiredProperties = ["payload", "reason", "signature", "verified"];

/**
 * @member {String} payload
 */
WebhookStatusCommitCommitVerification.prototype['payload'] = undefined;

/**
 * @member {module:model/WebhookStatusCommitCommitVerification.ReasonEnum} reason
 */
WebhookStatusCommitCommitVerification.prototype['reason'] = undefined;

/**
 * @member {String} signature
 */
WebhookStatusCommitCommitVerification.prototype['signature'] = undefined;

/**
 * @member {Boolean} verified
 */
WebhookStatusCommitCommitVerification.prototype['verified'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
WebhookStatusCommitCommitVerification['ReasonEnum'] = {

    /**
     * value: "expired_key"
     * @const
     */
    "expired_key": "expired_key",

    /**
     * value: "not_signing_key"
     * @const
     */
    "not_signing_key": "not_signing_key",

    /**
     * value: "gpgverify_error"
     * @const
     */
    "gpgverify_error": "gpgverify_error",

    /**
     * value: "gpgverify_unavailable"
     * @const
     */
    "gpgverify_unavailable": "gpgverify_unavailable",

    /**
     * value: "unsigned"
     * @const
     */
    "unsigned": "unsigned",

    /**
     * value: "unknown_signature_type"
     * @const
     */
    "unknown_signature_type": "unknown_signature_type",

    /**
     * value: "no_user"
     * @const
     */
    "no_user": "no_user",

    /**
     * value: "unverified_email"
     * @const
     */
    "unverified_email": "unverified_email",

    /**
     * value: "bad_email"
     * @const
     */
    "bad_email": "bad_email",

    /**
     * value: "unknown_key"
     * @const
     */
    "unknown_key": "unknown_key",

    /**
     * value: "malformed_signature"
     * @const
     */
    "malformed_signature": "malformed_signature",

    /**
     * value: "invalid"
     * @const
     */
    "invalid": "invalid",

    /**
     * value: "valid"
     * @const
     */
    "valid": "valid",

    /**
     * value: "bad_cert"
     * @const
     */
    "bad_cert": "bad_cert",

    /**
     * value: "ocsp_pending"
     * @const
     */
    "ocsp_pending": "ocsp_pending"
};



export default WebhookStatusCommitCommitVerification;

