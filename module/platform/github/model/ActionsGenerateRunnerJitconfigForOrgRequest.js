/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionsGenerateRunnerJitconfigForOrgRequest model module.
 * @module model/ActionsGenerateRunnerJitconfigForOrgRequest
 * @version 1.1.4
 */
class ActionsGenerateRunnerJitconfigForOrgRequest {
    /**
     * Constructs a new <code>ActionsGenerateRunnerJitconfigForOrgRequest</code>.
     * @alias module:model/ActionsGenerateRunnerJitconfigForOrgRequest
     * @param name {String} The name of the new runner.
     * @param runnerGroupId {Number} The ID of the runner group to register the runner to.
     * @param labels {Array.<String>} The names of the custom labels to add to the runner. **Minimum items**: 1. **Maximum items**: 100.
     */
    constructor(name, runnerGroupId, labels) { 
        
        ActionsGenerateRunnerJitconfigForOrgRequest.initialize(this, name, runnerGroupId, labels);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, runnerGroupId, labels) { 
        obj['name'] = name;
        obj['runner_group_id'] = runnerGroupId;
        obj['labels'] = labels;
    }

    /**
     * Constructs a <code>ActionsGenerateRunnerJitconfigForOrgRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsGenerateRunnerJitconfigForOrgRequest} obj Optional instance to populate.
     * @return {module:model/ActionsGenerateRunnerJitconfigForOrgRequest} The populated <code>ActionsGenerateRunnerJitconfigForOrgRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsGenerateRunnerJitconfigForOrgRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('runner_group_id')) {
                obj['runner_group_id'] = ApiClient.convertToType(data['runner_group_id'], 'Number');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('work_folder')) {
                obj['work_folder'] = ApiClient.convertToType(data['work_folder'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsGenerateRunnerJitconfigForOrgRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsGenerateRunnerJitconfigForOrgRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionsGenerateRunnerJitconfigForOrgRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }
        // ensure the json data is a string
        if (data['work_folder'] && !(typeof data['work_folder'] === 'string' || data['work_folder'] instanceof String)) {
            throw new Error("Expected the field `work_folder` to be a primitive type in the JSON string but got " + data['work_folder']);
        }

        return true;
    }


}

ActionsGenerateRunnerJitconfigForOrgRequest.RequiredProperties = ["name", "runner_group_id", "labels"];

/**
 * The name of the new runner.
 * @member {String} name
 */
ActionsGenerateRunnerJitconfigForOrgRequest.prototype['name'] = undefined;

/**
 * The ID of the runner group to register the runner to.
 * @member {Number} runner_group_id
 */
ActionsGenerateRunnerJitconfigForOrgRequest.prototype['runner_group_id'] = undefined;

/**
 * The names of the custom labels to add to the runner. **Minimum items**: 1. **Maximum items**: 100.
 * @member {Array.<String>} labels
 */
ActionsGenerateRunnerJitconfigForOrgRequest.prototype['labels'] = undefined;

/**
 * The working directory to be used for job execution, relative to the runner install directory.
 * @member {String} work_folder
 * @default '_work'
 */
ActionsGenerateRunnerJitconfigForOrgRequest.prototype['work_folder'] = '_work';






export default ActionsGenerateRunnerJitconfigForOrgRequest;

