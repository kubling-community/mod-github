/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CodespacesCreateWithPrForAuthenticatedUserRequest model module.
 * @module model/CodespacesCreateWithPrForAuthenticatedUserRequest
 * @version 1.1.4
 */
class CodespacesCreateWithPrForAuthenticatedUserRequest {
    /**
     * Constructs a new <code>CodespacesCreateWithPrForAuthenticatedUserRequest</code>.
     * @alias module:model/CodespacesCreateWithPrForAuthenticatedUserRequest
     */
    constructor() { 
        
        CodespacesCreateWithPrForAuthenticatedUserRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CodespacesCreateWithPrForAuthenticatedUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodespacesCreateWithPrForAuthenticatedUserRequest} obj Optional instance to populate.
     * @return {module:model/CodespacesCreateWithPrForAuthenticatedUserRequest} The populated <code>CodespacesCreateWithPrForAuthenticatedUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodespacesCreateWithPrForAuthenticatedUserRequest();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('geo')) {
                obj['geo'] = ApiClient.convertToType(data['geo'], 'String');
            }
            if (data.hasOwnProperty('client_ip')) {
                obj['client_ip'] = ApiClient.convertToType(data['client_ip'], 'String');
            }
            if (data.hasOwnProperty('machine')) {
                obj['machine'] = ApiClient.convertToType(data['machine'], 'String');
            }
            if (data.hasOwnProperty('devcontainer_path')) {
                obj['devcontainer_path'] = ApiClient.convertToType(data['devcontainer_path'], 'String');
            }
            if (data.hasOwnProperty('multi_repo_permissions_opt_out')) {
                obj['multi_repo_permissions_opt_out'] = ApiClient.convertToType(data['multi_repo_permissions_opt_out'], 'Boolean');
            }
            if (data.hasOwnProperty('working_directory')) {
                obj['working_directory'] = ApiClient.convertToType(data['working_directory'], 'String');
            }
            if (data.hasOwnProperty('idle_timeout_minutes')) {
                obj['idle_timeout_minutes'] = ApiClient.convertToType(data['idle_timeout_minutes'], 'Number');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('retention_period_minutes')) {
                obj['retention_period_minutes'] = ApiClient.convertToType(data['retention_period_minutes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodespacesCreateWithPrForAuthenticatedUserRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodespacesCreateWithPrForAuthenticatedUserRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['geo'] && !(typeof data['geo'] === 'string' || data['geo'] instanceof String)) {
            throw new Error("Expected the field `geo` to be a primitive type in the JSON string but got " + data['geo']);
        }
        // ensure the json data is a string
        if (data['client_ip'] && !(typeof data['client_ip'] === 'string' || data['client_ip'] instanceof String)) {
            throw new Error("Expected the field `client_ip` to be a primitive type in the JSON string but got " + data['client_ip']);
        }
        // ensure the json data is a string
        if (data['machine'] && !(typeof data['machine'] === 'string' || data['machine'] instanceof String)) {
            throw new Error("Expected the field `machine` to be a primitive type in the JSON string but got " + data['machine']);
        }
        // ensure the json data is a string
        if (data['devcontainer_path'] && !(typeof data['devcontainer_path'] === 'string' || data['devcontainer_path'] instanceof String)) {
            throw new Error("Expected the field `devcontainer_path` to be a primitive type in the JSON string but got " + data['devcontainer_path']);
        }
        // ensure the json data is a string
        if (data['working_directory'] && !(typeof data['working_directory'] === 'string' || data['working_directory'] instanceof String)) {
            throw new Error("Expected the field `working_directory` to be a primitive type in the JSON string but got " + data['working_directory']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }

        return true;
    }


}



/**
 * The requested location for a new codespace. Best efforts are made to respect this upon creation. Assigned by IP if not provided.
 * @member {String} location
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['location'] = undefined;

/**
 * The geographic area for this codespace. If not specified, the value is assigned by IP. This property replaces `location`, which is being deprecated.
 * @member {module:model/CodespacesCreateWithPrForAuthenticatedUserRequest.GeoEnum} geo
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['geo'] = undefined;

/**
 * IP for location auto-detection when proxying a request
 * @member {String} client_ip
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['client_ip'] = undefined;

/**
 * Machine type to use for this codespace
 * @member {String} machine
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['machine'] = undefined;

/**
 * Path to devcontainer.json config to use for this codespace
 * @member {String} devcontainer_path
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['devcontainer_path'] = undefined;

/**
 * Whether to authorize requested permissions from devcontainer.json
 * @member {Boolean} multi_repo_permissions_opt_out
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['multi_repo_permissions_opt_out'] = undefined;

/**
 * Working directory for this codespace
 * @member {String} working_directory
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['working_directory'] = undefined;

/**
 * Time in minutes before codespace stops from inactivity
 * @member {Number} idle_timeout_minutes
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['idle_timeout_minutes'] = undefined;

/**
 * Display name for this codespace
 * @member {String} display_name
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['display_name'] = undefined;

/**
 * Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
 * @member {Number} retention_period_minutes
 */
CodespacesCreateWithPrForAuthenticatedUserRequest.prototype['retention_period_minutes'] = undefined;





/**
 * Allowed values for the <code>geo</code> property.
 * @enum {String}
 * @readonly
 */
CodespacesCreateWithPrForAuthenticatedUserRequest['GeoEnum'] = {

    /**
     * value: "EuropeWest"
     * @const
     */
    "EuropeWest": "EuropeWest",

    /**
     * value: "SoutheastAsia"
     * @const
     */
    "SoutheastAsia": "SoutheastAsia",

    /**
     * value: "UsEast"
     * @const
     */
    "UsEast": "UsEast",

    /**
     * value: "UsWest"
     * @const
     */
    "UsWest": "UsWest"
};



export default CodespacesCreateWithPrForAuthenticatedUserRequest;

