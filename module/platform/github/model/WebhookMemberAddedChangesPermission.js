/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookMemberAddedChangesPermission model module.
 * @module model/WebhookMemberAddedChangesPermission
 * @version 1.1.4
 */
class WebhookMemberAddedChangesPermission {
    /**
     * Constructs a new <code>WebhookMemberAddedChangesPermission</code>.
     * This field is included for legacy purposes; use the &#x60;role_name&#x60; field instead. The &#x60;maintain&#x60; role is mapped to &#x60;write&#x60; and the &#x60;triage&#x60; role is mapped to &#x60;read&#x60;. To determine the role assigned to the collaborator, use the &#x60;role_name&#x60; field instead, which will provide the full role name, including custom roles.
     * @alias module:model/WebhookMemberAddedChangesPermission
     * @param to {module:model/WebhookMemberAddedChangesPermission.ToEnum} 
     */
    constructor(to) { 
        
        WebhookMemberAddedChangesPermission.initialize(this, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, to) { 
        obj['to'] = to;
    }

    /**
     * Constructs a <code>WebhookMemberAddedChangesPermission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookMemberAddedChangesPermission} obj Optional instance to populate.
     * @return {module:model/WebhookMemberAddedChangesPermission} The populated <code>WebhookMemberAddedChangesPermission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookMemberAddedChangesPermission();

            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookMemberAddedChangesPermission</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookMemberAddedChangesPermission</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookMemberAddedChangesPermission.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }

        return true;
    }


}

WebhookMemberAddedChangesPermission.RequiredProperties = ["to"];

/**
 * @member {module:model/WebhookMemberAddedChangesPermission.ToEnum} to
 */
WebhookMemberAddedChangesPermission.prototype['to'] = undefined;





/**
 * Allowed values for the <code>to</code> property.
 * @enum {String}
 * @readonly
 */
WebhookMemberAddedChangesPermission['ToEnum'] = {

    /**
     * value: "write"
     * @const
     */
    "write": "write",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "read"
     * @const
     */
    "read": "read"
};



export default WebhookMemberAddedChangesPermission;

