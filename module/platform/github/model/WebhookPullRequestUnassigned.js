/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnterpriseWebhooks from './EnterpriseWebhooks';
import OrganizationSimpleWebhooks from './OrganizationSimpleWebhooks';
import PullRequest11 from './PullRequest11';
import RepositoryWebhooks from './RepositoryWebhooks';
import SimpleInstallation from './SimpleInstallation';
import SimpleUserWebhooks from './SimpleUserWebhooks';
import WebhooksUserMannequin from './WebhooksUserMannequin';

/**
 * The WebhookPullRequestUnassigned model module.
 * @module model/WebhookPullRequestUnassigned
 * @version 1.1.4
 */
class WebhookPullRequestUnassigned {
    /**
     * Constructs a new <code>WebhookPullRequestUnassigned</code>.
     * @alias module:model/WebhookPullRequestUnassigned
     * @param action {module:model/WebhookPullRequestUnassigned.ActionEnum} 
     * @param number {Number} The pull request number.
     * @param pullRequest {module:model/PullRequest11} 
     * @param repository {module:model/RepositoryWebhooks} 
     */
    constructor(action, number, pullRequest, repository) { 
        
        WebhookPullRequestUnassigned.initialize(this, action, number, pullRequest, repository);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, number, pullRequest, repository) { 
        obj['action'] = action;
        obj['number'] = number;
        obj['pull_request'] = pullRequest;
        obj['repository'] = repository;
    }

    /**
     * Constructs a <code>WebhookPullRequestUnassigned</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookPullRequestUnassigned} obj Optional instance to populate.
     * @return {module:model/WebhookPullRequestUnassigned} The populated <code>WebhookPullRequestUnassigned</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookPullRequestUnassigned();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = WebhooksUserMannequin.constructFromObject(data['assignee']);
            }
            if (data.hasOwnProperty('enterprise')) {
                obj['enterprise'] = EnterpriseWebhooks.constructFromObject(data['enterprise']);
            }
            if (data.hasOwnProperty('installation')) {
                obj['installation'] = SimpleInstallation.constructFromObject(data['installation']);
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = OrganizationSimpleWebhooks.constructFromObject(data['organization']);
            }
            if (data.hasOwnProperty('pull_request')) {
                obj['pull_request'] = PullRequest11.constructFromObject(data['pull_request']);
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = RepositoryWebhooks.constructFromObject(data['repository']);
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = SimpleUserWebhooks.constructFromObject(data['sender']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookPullRequestUnassigned</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookPullRequestUnassigned</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookPullRequestUnassigned.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // validate the optional field `assignee`
        if (data['assignee']) { // data not null
          WebhooksUserMannequin.validateJSON(data['assignee']);
        }
        // validate the optional field `enterprise`
        if (data['enterprise']) { // data not null
          EnterpriseWebhooks.validateJSON(data['enterprise']);
        }
        // validate the optional field `installation`
        if (data['installation']) { // data not null
          SimpleInstallation.validateJSON(data['installation']);
        }
        // validate the optional field `organization`
        if (data['organization']) { // data not null
          OrganizationSimpleWebhooks.validateJSON(data['organization']);
        }
        // validate the optional field `pull_request`
        if (data['pull_request']) { // data not null
          PullRequest11.validateJSON(data['pull_request']);
        }
        // validate the optional field `repository`
        if (data['repository']) { // data not null
          RepositoryWebhooks.validateJSON(data['repository']);
        }
        // validate the optional field `sender`
        if (data['sender']) { // data not null
          SimpleUserWebhooks.validateJSON(data['sender']);
        }

        return true;
    }


}

WebhookPullRequestUnassigned.RequiredProperties = ["action", "number", "pull_request", "repository"];

/**
 * @member {module:model/WebhookPullRequestUnassigned.ActionEnum} action
 */
WebhookPullRequestUnassigned.prototype['action'] = undefined;

/**
 * @member {module:model/WebhooksUserMannequin} assignee
 */
WebhookPullRequestUnassigned.prototype['assignee'] = undefined;

/**
 * @member {module:model/EnterpriseWebhooks} enterprise
 */
WebhookPullRequestUnassigned.prototype['enterprise'] = undefined;

/**
 * @member {module:model/SimpleInstallation} installation
 */
WebhookPullRequestUnassigned.prototype['installation'] = undefined;

/**
 * The pull request number.
 * @member {Number} number
 */
WebhookPullRequestUnassigned.prototype['number'] = undefined;

/**
 * @member {module:model/OrganizationSimpleWebhooks} organization
 */
WebhookPullRequestUnassigned.prototype['organization'] = undefined;

/**
 * @member {module:model/PullRequest11} pull_request
 */
WebhookPullRequestUnassigned.prototype['pull_request'] = undefined;

/**
 * @member {module:model/RepositoryWebhooks} repository
 */
WebhookPullRequestUnassigned.prototype['repository'] = undefined;

/**
 * @member {module:model/SimpleUserWebhooks} sender
 */
WebhookPullRequestUnassigned.prototype['sender'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
WebhookPullRequestUnassigned['ActionEnum'] = {

    /**
     * value: "unassigned"
     * @const
     */
    "unassigned": "unassigned"
};



export default WebhookPullRequestUnassigned;

