/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrganizationProgrammaticAccessGrantRequestPermissions from './OrganizationProgrammaticAccessGrantRequestPermissions';
import SimpleUser from './SimpleUser';

/**
 * The OrganizationProgrammaticAccessGrant model module.
 * @module model/OrganizationProgrammaticAccessGrant
 * @version 1.1.4
 */
class OrganizationProgrammaticAccessGrant {
    /**
     * Constructs a new <code>OrganizationProgrammaticAccessGrant</code>.
     * Minimal representation of an organization programmatic access grant for enumerations
     * @alias module:model/OrganizationProgrammaticAccessGrant
     * @param id {Number} Unique identifier of the fine-grained personal access token. The `pat_id` used to get details about an approved fine-grained personal access token.
     * @param owner {module:model/SimpleUser} 
     * @param repositorySelection {module:model/OrganizationProgrammaticAccessGrant.RepositorySelectionEnum} Type of repository selection requested.
     * @param repositoriesUrl {String} URL to the list of repositories the fine-grained personal access token can access. Only follow when `repository_selection` is `subset`.
     * @param permissions {module:model/OrganizationProgrammaticAccessGrantRequestPermissions} 
     * @param accessGrantedAt {String} Date and time when the fine-grained personal access token was approved to access the organization.
     * @param tokenExpired {Boolean} Whether the associated fine-grained personal access token has expired.
     * @param tokenExpiresAt {String} Date and time when the associated fine-grained personal access token expires.
     * @param tokenLastUsedAt {String} Date and time when the associated fine-grained personal access token was last used for authentication.
     */
    constructor(id, owner, repositorySelection, repositoriesUrl, permissions, accessGrantedAt, tokenExpired, tokenExpiresAt, tokenLastUsedAt) { 
        
        OrganizationProgrammaticAccessGrant.initialize(this, id, owner, repositorySelection, repositoriesUrl, permissions, accessGrantedAt, tokenExpired, tokenExpiresAt, tokenLastUsedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, owner, repositorySelection, repositoriesUrl, permissions, accessGrantedAt, tokenExpired, tokenExpiresAt, tokenLastUsedAt) { 
        obj['id'] = id;
        obj['owner'] = owner;
        obj['repository_selection'] = repositorySelection;
        obj['repositories_url'] = repositoriesUrl;
        obj['permissions'] = permissions;
        obj['access_granted_at'] = accessGrantedAt;
        obj['token_expired'] = tokenExpired;
        obj['token_expires_at'] = tokenExpiresAt;
        obj['token_last_used_at'] = tokenLastUsedAt;
    }

    /**
     * Constructs a <code>OrganizationProgrammaticAccessGrant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationProgrammaticAccessGrant} obj Optional instance to populate.
     * @return {module:model/OrganizationProgrammaticAccessGrant} The populated <code>OrganizationProgrammaticAccessGrant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationProgrammaticAccessGrant();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = SimpleUser.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('repository_selection')) {
                obj['repository_selection'] = ApiClient.convertToType(data['repository_selection'], 'String');
            }
            if (data.hasOwnProperty('repositories_url')) {
                obj['repositories_url'] = ApiClient.convertToType(data['repositories_url'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = OrganizationProgrammaticAccessGrantRequestPermissions.constructFromObject(data['permissions']);
            }
            if (data.hasOwnProperty('access_granted_at')) {
                obj['access_granted_at'] = ApiClient.convertToType(data['access_granted_at'], 'String');
            }
            if (data.hasOwnProperty('token_expired')) {
                obj['token_expired'] = ApiClient.convertToType(data['token_expired'], 'Boolean');
            }
            if (data.hasOwnProperty('token_expires_at')) {
                obj['token_expires_at'] = ApiClient.convertToType(data['token_expires_at'], 'String');
            }
            if (data.hasOwnProperty('token_last_used_at')) {
                obj['token_last_used_at'] = ApiClient.convertToType(data['token_last_used_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationProgrammaticAccessGrant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationProgrammaticAccessGrant</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrganizationProgrammaticAccessGrant.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          SimpleUser.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['repository_selection'] && !(typeof data['repository_selection'] === 'string' || data['repository_selection'] instanceof String)) {
            throw new Error("Expected the field `repository_selection` to be a primitive type in the JSON string but got " + data['repository_selection']);
        }
        // ensure the json data is a string
        if (data['repositories_url'] && !(typeof data['repositories_url'] === 'string' || data['repositories_url'] instanceof String)) {
            throw new Error("Expected the field `repositories_url` to be a primitive type in the JSON string but got " + data['repositories_url']);
        }
        // validate the optional field `permissions`
        if (data['permissions']) { // data not null
          OrganizationProgrammaticAccessGrantRequestPermissions.validateJSON(data['permissions']);
        }
        // ensure the json data is a string
        if (data['access_granted_at'] && !(typeof data['access_granted_at'] === 'string' || data['access_granted_at'] instanceof String)) {
            throw new Error("Expected the field `access_granted_at` to be a primitive type in the JSON string but got " + data['access_granted_at']);
        }
        // ensure the json data is a string
        if (data['token_expires_at'] && !(typeof data['token_expires_at'] === 'string' || data['token_expires_at'] instanceof String)) {
            throw new Error("Expected the field `token_expires_at` to be a primitive type in the JSON string but got " + data['token_expires_at']);
        }
        // ensure the json data is a string
        if (data['token_last_used_at'] && !(typeof data['token_last_used_at'] === 'string' || data['token_last_used_at'] instanceof String)) {
            throw new Error("Expected the field `token_last_used_at` to be a primitive type in the JSON string but got " + data['token_last_used_at']);
        }

        return true;
    }


}

OrganizationProgrammaticAccessGrant.RequiredProperties = ["id", "owner", "repository_selection", "repositories_url", "permissions", "access_granted_at", "token_expired", "token_expires_at", "token_last_used_at"];

/**
 * Unique identifier of the fine-grained personal access token. The `pat_id` used to get details about an approved fine-grained personal access token.
 * @member {Number} id
 */
OrganizationProgrammaticAccessGrant.prototype['id'] = undefined;

/**
 * @member {module:model/SimpleUser} owner
 */
OrganizationProgrammaticAccessGrant.prototype['owner'] = undefined;

/**
 * Type of repository selection requested.
 * @member {module:model/OrganizationProgrammaticAccessGrant.RepositorySelectionEnum} repository_selection
 */
OrganizationProgrammaticAccessGrant.prototype['repository_selection'] = undefined;

/**
 * URL to the list of repositories the fine-grained personal access token can access. Only follow when `repository_selection` is `subset`.
 * @member {String} repositories_url
 */
OrganizationProgrammaticAccessGrant.prototype['repositories_url'] = undefined;

/**
 * @member {module:model/OrganizationProgrammaticAccessGrantRequestPermissions} permissions
 */
OrganizationProgrammaticAccessGrant.prototype['permissions'] = undefined;

/**
 * Date and time when the fine-grained personal access token was approved to access the organization.
 * @member {String} access_granted_at
 */
OrganizationProgrammaticAccessGrant.prototype['access_granted_at'] = undefined;

/**
 * Whether the associated fine-grained personal access token has expired.
 * @member {Boolean} token_expired
 */
OrganizationProgrammaticAccessGrant.prototype['token_expired'] = undefined;

/**
 * Date and time when the associated fine-grained personal access token expires.
 * @member {String} token_expires_at
 */
OrganizationProgrammaticAccessGrant.prototype['token_expires_at'] = undefined;

/**
 * Date and time when the associated fine-grained personal access token was last used for authentication.
 * @member {String} token_last_used_at
 */
OrganizationProgrammaticAccessGrant.prototype['token_last_used_at'] = undefined;





/**
 * Allowed values for the <code>repository_selection</code> property.
 * @enum {String}
 * @readonly
 */
OrganizationProgrammaticAccessGrant['RepositorySelectionEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "subset"
     * @const
     */
    "subset": "subset"
};



export default OrganizationProgrammaticAccessGrant;

