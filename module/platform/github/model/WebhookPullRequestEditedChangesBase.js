/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookDiscussionCommentEditedChangesBody from './WebhookDiscussionCommentEditedChangesBody';

/**
 * The WebhookPullRequestEditedChangesBase model module.
 * @module model/WebhookPullRequestEditedChangesBase
 * @version 1.1.4
 */
class WebhookPullRequestEditedChangesBase {
    /**
     * Constructs a new <code>WebhookPullRequestEditedChangesBase</code>.
     * @alias module:model/WebhookPullRequestEditedChangesBase
     * @param ref {module:model/WebhookDiscussionCommentEditedChangesBody} 
     * @param sha {module:model/WebhookDiscussionCommentEditedChangesBody} 
     */
    constructor(ref, sha) { 
        
        WebhookPullRequestEditedChangesBase.initialize(this, ref, sha);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ref, sha) { 
        obj['ref'] = ref;
        obj['sha'] = sha;
    }

    /**
     * Constructs a <code>WebhookPullRequestEditedChangesBase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookPullRequestEditedChangesBase} obj Optional instance to populate.
     * @return {module:model/WebhookPullRequestEditedChangesBase} The populated <code>WebhookPullRequestEditedChangesBase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookPullRequestEditedChangesBase();

            if (data.hasOwnProperty('ref')) {
                obj['ref'] = WebhookDiscussionCommentEditedChangesBody.constructFromObject(data['ref']);
            }
            if (data.hasOwnProperty('sha')) {
                obj['sha'] = WebhookDiscussionCommentEditedChangesBody.constructFromObject(data['sha']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookPullRequestEditedChangesBase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookPullRequestEditedChangesBase</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookPullRequestEditedChangesBase.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ref`
        if (data['ref']) { // data not null
          WebhookDiscussionCommentEditedChangesBody.validateJSON(data['ref']);
        }
        // validate the optional field `sha`
        if (data['sha']) { // data not null
          WebhookDiscussionCommentEditedChangesBody.validateJSON(data['sha']);
        }

        return true;
    }


}

WebhookPullRequestEditedChangesBase.RequiredProperties = ["ref", "sha"];

/**
 * @member {module:model/WebhookDiscussionCommentEditedChangesBody} ref
 */
WebhookPullRequestEditedChangesBase.prototype['ref'] = undefined;

/**
 * @member {module:model/WebhookDiscussionCommentEditedChangesBody} sha
 */
WebhookPullRequestEditedChangesBase.prototype['sha'] = undefined;






export default WebhookPullRequestEditedChangesBase;

