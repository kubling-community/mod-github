/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionsWorkflowAccessToRepository model module.
 * @module model/ActionsWorkflowAccessToRepository
 * @version 1.1.4
 */
class ActionsWorkflowAccessToRepository {
    /**
     * Constructs a new <code>ActionsWorkflowAccessToRepository</code>.
     * @alias module:model/ActionsWorkflowAccessToRepository
     * @param accessLevel {module:model/ActionsWorkflowAccessToRepository.AccessLevelEnum} Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the repository.  `none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repositories only. `organization` level access allows sharing across the organization.
     */
    constructor(accessLevel) { 
        
        ActionsWorkflowAccessToRepository.initialize(this, accessLevel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessLevel) { 
        obj['access_level'] = accessLevel;
    }

    /**
     * Constructs a <code>ActionsWorkflowAccessToRepository</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsWorkflowAccessToRepository} obj Optional instance to populate.
     * @return {module:model/ActionsWorkflowAccessToRepository} The populated <code>ActionsWorkflowAccessToRepository</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsWorkflowAccessToRepository();

            if (data.hasOwnProperty('access_level')) {
                obj['access_level'] = ApiClient.convertToType(data['access_level'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsWorkflowAccessToRepository</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsWorkflowAccessToRepository</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ActionsWorkflowAccessToRepository.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_level'] && !(typeof data['access_level'] === 'string' || data['access_level'] instanceof String)) {
            throw new Error("Expected the field `access_level` to be a primitive type in the JSON string but got " + data['access_level']);
        }

        return true;
    }


}

ActionsWorkflowAccessToRepository.RequiredProperties = ["access_level"];

/**
 * Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the repository.  `none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repositories only. `organization` level access allows sharing across the organization.
 * @member {module:model/ActionsWorkflowAccessToRepository.AccessLevelEnum} access_level
 */
ActionsWorkflowAccessToRepository.prototype['access_level'] = undefined;





/**
 * Allowed values for the <code>access_level</code> property.
 * @enum {String}
 * @readonly
 */
ActionsWorkflowAccessToRepository['AccessLevelEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "user"
     * @const
     */
    "user": "user",

    /**
     * value: "organization"
     * @const
     */
    "organization": "organization"
};



export default ActionsWorkflowAccessToRepository;

