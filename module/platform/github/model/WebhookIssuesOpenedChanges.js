/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Issue6 from './Issue6';
import Repository1 from './Repository1';

/**
 * The WebhookIssuesOpenedChanges model module.
 * @module model/WebhookIssuesOpenedChanges
 * @version 1.1.4
 */
class WebhookIssuesOpenedChanges {
    /**
     * Constructs a new <code>WebhookIssuesOpenedChanges</code>.
     * @alias module:model/WebhookIssuesOpenedChanges
     * @param oldIssue {module:model/Issue6} 
     * @param oldRepository {module:model/Repository1} 
     */
    constructor(oldIssue, oldRepository) { 
        
        WebhookIssuesOpenedChanges.initialize(this, oldIssue, oldRepository);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, oldIssue, oldRepository) { 
        obj['old_issue'] = oldIssue;
        obj['old_repository'] = oldRepository;
    }

    /**
     * Constructs a <code>WebhookIssuesOpenedChanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookIssuesOpenedChanges} obj Optional instance to populate.
     * @return {module:model/WebhookIssuesOpenedChanges} The populated <code>WebhookIssuesOpenedChanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookIssuesOpenedChanges();

            if (data.hasOwnProperty('old_issue')) {
                obj['old_issue'] = Issue6.constructFromObject(data['old_issue']);
            }
            if (data.hasOwnProperty('old_repository')) {
                obj['old_repository'] = Repository1.constructFromObject(data['old_repository']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookIssuesOpenedChanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookIssuesOpenedChanges</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookIssuesOpenedChanges.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `old_issue`
        if (data['old_issue']) { // data not null
          Issue6.validateJSON(data['old_issue']);
        }
        // validate the optional field `old_repository`
        if (data['old_repository']) { // data not null
          Repository1.validateJSON(data['old_repository']);
        }

        return true;
    }


}

WebhookIssuesOpenedChanges.RequiredProperties = ["old_issue", "old_repository"];

/**
 * @member {module:model/Issue6} old_issue
 */
WebhookIssuesOpenedChanges.prototype['old_issue'] = undefined;

/**
 * @member {module:model/Repository1} old_repository
 */
WebhookIssuesOpenedChanges.prototype['old_repository'] = undefined;






export default WebhookIssuesOpenedChanges;

