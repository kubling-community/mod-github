/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlertInstance from './AlertInstance';
import WebhookCodeScanningAlertAppearedInBranchAlertRule from './WebhookCodeScanningAlertAppearedInBranchAlertRule';
import WebhookCodeScanningAlertAppearedInBranchAlertTool from './WebhookCodeScanningAlertAppearedInBranchAlertTool';

/**
 * The WebhookCodeScanningAlertReopenedByUserAlert model module.
 * @module model/WebhookCodeScanningAlertReopenedByUserAlert
 * @version 1.1.4
 */
class WebhookCodeScanningAlertReopenedByUserAlert {
    /**
     * Constructs a new <code>WebhookCodeScanningAlertReopenedByUserAlert</code>.
     * The code scanning alert involved in the event.
     * @alias module:model/WebhookCodeScanningAlertReopenedByUserAlert
     * @param createdAt {Date} The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
     * @param dismissedAt {Object} The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param dismissedBy {Object} 
     * @param dismissedReason {Object} The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.
     * @param htmlUrl {String} The GitHub URL of the alert resource.
     * @param number {Number} The code scanning alert number.
     * @param rule {module:model/WebhookCodeScanningAlertAppearedInBranchAlertRule} 
     * @param state {module:model/WebhookCodeScanningAlertReopenedByUserAlert.StateEnum} State of a code scanning alert.
     * @param tool {module:model/WebhookCodeScanningAlertAppearedInBranchAlertTool} 
     * @param url {String} 
     */
    constructor(createdAt, dismissedAt, dismissedBy, dismissedReason, htmlUrl, number, rule, state, tool, url) { 
        
        WebhookCodeScanningAlertReopenedByUserAlert.initialize(this, createdAt, dismissedAt, dismissedBy, dismissedReason, htmlUrl, number, rule, state, tool, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, dismissedAt, dismissedBy, dismissedReason, htmlUrl, number, rule, state, tool, url) { 
        obj['created_at'] = createdAt;
        obj['dismissed_at'] = dismissedAt;
        obj['dismissed_by'] = dismissedBy;
        obj['dismissed_reason'] = dismissedReason;
        obj['html_url'] = htmlUrl;
        obj['number'] = number;
        obj['rule'] = rule;
        obj['state'] = state;
        obj['tool'] = tool;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>WebhookCodeScanningAlertReopenedByUserAlert</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookCodeScanningAlertReopenedByUserAlert} obj Optional instance to populate.
     * @return {module:model/WebhookCodeScanningAlertReopenedByUserAlert} The populated <code>WebhookCodeScanningAlertReopenedByUserAlert</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookCodeScanningAlertReopenedByUserAlert();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('dismissed_at')) {
                obj['dismissed_at'] = ApiClient.convertToType(data['dismissed_at'], Object);
            }
            if (data.hasOwnProperty('dismissed_by')) {
                obj['dismissed_by'] = ApiClient.convertToType(data['dismissed_by'], Object);
            }
            if (data.hasOwnProperty('dismissed_reason')) {
                obj['dismissed_reason'] = ApiClient.convertToType(data['dismissed_reason'], Object);
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('most_recent_instance')) {
                obj['most_recent_instance'] = AlertInstance.constructFromObject(data['most_recent_instance']);
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('rule')) {
                obj['rule'] = WebhookCodeScanningAlertAppearedInBranchAlertRule.constructFromObject(data['rule']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('tool')) {
                obj['tool'] = WebhookCodeScanningAlertAppearedInBranchAlertTool.constructFromObject(data['tool']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookCodeScanningAlertReopenedByUserAlert</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookCodeScanningAlertReopenedByUserAlert</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookCodeScanningAlertReopenedByUserAlert.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['html_url'] && !(typeof data['html_url'] === 'string' || data['html_url'] instanceof String)) {
            throw new Error("Expected the field `html_url` to be a primitive type in the JSON string but got " + data['html_url']);
        }
        // validate the optional field `most_recent_instance`
        if (data['most_recent_instance']) { // data not null
          AlertInstance.validateJSON(data['most_recent_instance']);
        }
        // validate the optional field `rule`
        if (data['rule']) { // data not null
          WebhookCodeScanningAlertAppearedInBranchAlertRule.validateJSON(data['rule']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `tool`
        if (data['tool']) { // data not null
          WebhookCodeScanningAlertAppearedInBranchAlertTool.validateJSON(data['tool']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

WebhookCodeScanningAlertReopenedByUserAlert.RequiredProperties = ["created_at", "dismissed_at", "dismissed_by", "dismissed_reason", "html_url", "number", "rule", "state", "tool", "url"];

/**
 * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ.`
 * @member {Date} created_at
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['created_at'] = undefined;

/**
 * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Object} dismissed_at
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['dismissed_at'] = undefined;

/**
 * @member {Object} dismissed_by
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['dismissed_by'] = undefined;

/**
 * The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.
 * @member {Object} dismissed_reason
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['dismissed_reason'] = undefined;

/**
 * The GitHub URL of the alert resource.
 * @member {String} html_url
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['html_url'] = undefined;

/**
 * @member {module:model/AlertInstance} most_recent_instance
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['most_recent_instance'] = undefined;

/**
 * The code scanning alert number.
 * @member {Number} number
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['number'] = undefined;

/**
 * @member {module:model/WebhookCodeScanningAlertAppearedInBranchAlertRule} rule
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['rule'] = undefined;

/**
 * State of a code scanning alert.
 * @member {module:model/WebhookCodeScanningAlertReopenedByUserAlert.StateEnum} state
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['state'] = undefined;

/**
 * @member {module:model/WebhookCodeScanningAlertAppearedInBranchAlertTool} tool
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['tool'] = undefined;

/**
 * @member {String} url
 */
WebhookCodeScanningAlertReopenedByUserAlert.prototype['url'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
WebhookCodeScanningAlertReopenedByUserAlert['StateEnum'] = {

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "fixed"
     * @const
     */
    "fixed": "fixed"
};



export default WebhookCodeScanningAlertReopenedByUserAlert;

