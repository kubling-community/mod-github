/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrgsCreateInvitationRequest model module.
 * @module model/OrgsCreateInvitationRequest
 * @version 1.1.4
 */
class OrgsCreateInvitationRequest {
    /**
     * Constructs a new <code>OrgsCreateInvitationRequest</code>.
     * @alias module:model/OrgsCreateInvitationRequest
     */
    constructor() { 
        
        OrgsCreateInvitationRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgsCreateInvitationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgsCreateInvitationRequest} obj Optional instance to populate.
     * @return {module:model/OrgsCreateInvitationRequest} The populated <code>OrgsCreateInvitationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgsCreateInvitationRequest();

            if (data.hasOwnProperty('invitee_id')) {
                obj['invitee_id'] = ApiClient.convertToType(data['invitee_id'], 'Number');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('team_ids')) {
                obj['team_ids'] = ApiClient.convertToType(data['team_ids'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrgsCreateInvitationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrgsCreateInvitationRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['team_ids'])) {
            throw new Error("Expected the field `team_ids` to be an array in the JSON data but got " + data['team_ids']);
        }

        return true;
    }


}



/**
 * **Required unless you provide `email`**. GitHub user ID for the person you are inviting.
 * @member {Number} invitee_id
 */
OrgsCreateInvitationRequest.prototype['invitee_id'] = undefined;

/**
 * **Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.
 * @member {String} email
 */
OrgsCreateInvitationRequest.prototype['email'] = undefined;

/**
 * The role for the new member.   * `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.    * `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.    * `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.   * `reinstate` - The previous role assigned to the invitee before they were removed from your organization. Can be one of the roles listed above. Only works if the invitee was previously part of your organization.
 * @member {module:model/OrgsCreateInvitationRequest.RoleEnum} role
 * @default 'direct_member'
 */
OrgsCreateInvitationRequest.prototype['role'] = 'direct_member';

/**
 * Specify IDs for the teams you want to invite new members to.
 * @member {Array.<Number>} team_ids
 */
OrgsCreateInvitationRequest.prototype['team_ids'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
OrgsCreateInvitationRequest['RoleEnum'] = {

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "direct_member"
     * @const
     */
    "direct_member": "direct_member",

    /**
     * value: "billing_manager"
     * @const
     */
    "billing_manager": "billing_manager",

    /**
     * value: "reinstate"
     * @const
     */
    "reinstate": "reinstate"
};



export default OrgsCreateInvitationRequest;

