/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReferrerTraffic model module.
 * @module model/ReferrerTraffic
 * @version 1.1.4
 */
class ReferrerTraffic {
    /**
     * Constructs a new <code>ReferrerTraffic</code>.
     * Referrer Traffic
     * @alias module:model/ReferrerTraffic
     * @param referrer {String} 
     * @param count {Number} 
     * @param uniques {Number} 
     */
    constructor(referrer, count, uniques) { 
        
        ReferrerTraffic.initialize(this, referrer, count, uniques);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, referrer, count, uniques) { 
        obj['referrer'] = referrer;
        obj['count'] = count;
        obj['uniques'] = uniques;
    }

    /**
     * Constructs a <code>ReferrerTraffic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReferrerTraffic} obj Optional instance to populate.
     * @return {module:model/ReferrerTraffic} The populated <code>ReferrerTraffic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReferrerTraffic();

            if (data.hasOwnProperty('referrer')) {
                obj['referrer'] = ApiClient.convertToType(data['referrer'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('uniques')) {
                obj['uniques'] = ApiClient.convertToType(data['uniques'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReferrerTraffic</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReferrerTraffic</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReferrerTraffic.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['referrer'] && !(typeof data['referrer'] === 'string' || data['referrer'] instanceof String)) {
            throw new Error("Expected the field `referrer` to be a primitive type in the JSON string but got " + data['referrer']);
        }

        return true;
    }


}

ReferrerTraffic.RequiredProperties = ["referrer", "count", "uniques"];

/**
 * @member {String} referrer
 */
ReferrerTraffic.prototype['referrer'] = undefined;

/**
 * @member {Number} count
 */
ReferrerTraffic.prototype['count'] = undefined;

/**
 * @member {Number} uniques
 */
ReferrerTraffic.prototype['uniques'] = undefined;






export default ReferrerTraffic;

