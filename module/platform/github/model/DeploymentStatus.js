/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NullableIntegration from './NullableIntegration';
import NullableSimpleUser from './NullableSimpleUser';

/**
 * The DeploymentStatus model module.
 * @module model/DeploymentStatus
 * @version 1.1.4
 */
class DeploymentStatus {
    /**
     * Constructs a new <code>DeploymentStatus</code>.
     * The status of a deployment.
     * @alias module:model/DeploymentStatus
     * @param url {String} 
     * @param id {Number} 
     * @param nodeId {String} 
     * @param state {module:model/DeploymentStatus.StateEnum} The state of the status.
     * @param creator {module:model/NullableSimpleUser} 
     * @param description {String} A short description of the status.
     * @param targetUrl {String} Deprecated: the URL to associate with this status.
     * @param createdAt {Date} 
     * @param updatedAt {Date} 
     * @param deploymentUrl {String} 
     * @param repositoryUrl {String} 
     */
    constructor(url, id, nodeId, state, creator, description, targetUrl, createdAt, updatedAt, deploymentUrl, repositoryUrl) { 
        
        DeploymentStatus.initialize(this, url, id, nodeId, state, creator, description, targetUrl, createdAt, updatedAt, deploymentUrl, repositoryUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url, id, nodeId, state, creator, description, targetUrl, createdAt, updatedAt, deploymentUrl, repositoryUrl) { 
        obj['url'] = url;
        obj['id'] = id;
        obj['node_id'] = nodeId;
        obj['state'] = state;
        obj['creator'] = creator;
        obj['description'] = description || '';
        obj['target_url'] = targetUrl || '';
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
        obj['deployment_url'] = deploymentUrl;
        obj['repository_url'] = repositoryUrl;
    }

    /**
     * Constructs a <code>DeploymentStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeploymentStatus} obj Optional instance to populate.
     * @return {module:model/DeploymentStatus} The populated <code>DeploymentStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeploymentStatus();

            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('creator')) {
                obj['creator'] = NullableSimpleUser.constructFromObject(data['creator']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('target_url')) {
                obj['target_url'] = ApiClient.convertToType(data['target_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('deployment_url')) {
                obj['deployment_url'] = ApiClient.convertToType(data['deployment_url'], 'String');
            }
            if (data.hasOwnProperty('repository_url')) {
                obj['repository_url'] = ApiClient.convertToType(data['repository_url'], 'String');
            }
            if (data.hasOwnProperty('environment_url')) {
                obj['environment_url'] = ApiClient.convertToType(data['environment_url'], 'String');
            }
            if (data.hasOwnProperty('log_url')) {
                obj['log_url'] = ApiClient.convertToType(data['log_url'], 'String');
            }
            if (data.hasOwnProperty('performed_via_github_app')) {
                obj['performed_via_github_app'] = NullableIntegration.constructFromObject(data['performed_via_github_app']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeploymentStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeploymentStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeploymentStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `creator`
        if (data['creator']) { // data not null
          NullableSimpleUser.validateJSON(data['creator']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        // ensure the json data is a string
        if (data['target_url'] && !(typeof data['target_url'] === 'string' || data['target_url'] instanceof String)) {
            throw new Error("Expected the field `target_url` to be a primitive type in the JSON string but got " + data['target_url']);
        }
        // ensure the json data is a string
        if (data['deployment_url'] && !(typeof data['deployment_url'] === 'string' || data['deployment_url'] instanceof String)) {
            throw new Error("Expected the field `deployment_url` to be a primitive type in the JSON string but got " + data['deployment_url']);
        }
        // ensure the json data is a string
        if (data['repository_url'] && !(typeof data['repository_url'] === 'string' || data['repository_url'] instanceof String)) {
            throw new Error("Expected the field `repository_url` to be a primitive type in the JSON string but got " + data['repository_url']);
        }
        // ensure the json data is a string
        if (data['environment_url'] && !(typeof data['environment_url'] === 'string' || data['environment_url'] instanceof String)) {
            throw new Error("Expected the field `environment_url` to be a primitive type in the JSON string but got " + data['environment_url']);
        }
        // ensure the json data is a string
        if (data['log_url'] && !(typeof data['log_url'] === 'string' || data['log_url'] instanceof String)) {
            throw new Error("Expected the field `log_url` to be a primitive type in the JSON string but got " + data['log_url']);
        }
        // validate the optional field `performed_via_github_app`
        if (data['performed_via_github_app']) { // data not null
          NullableIntegration.validateJSON(data['performed_via_github_app']);
        }

        return true;
    }


}

DeploymentStatus.RequiredProperties = ["url", "id", "node_id", "state", "creator", "description", "target_url", "created_at", "updated_at", "deployment_url", "repository_url"];

/**
 * @member {String} url
 */
DeploymentStatus.prototype['url'] = undefined;

/**
 * @member {Number} id
 */
DeploymentStatus.prototype['id'] = undefined;

/**
 * @member {String} node_id
 */
DeploymentStatus.prototype['node_id'] = undefined;

/**
 * The state of the status.
 * @member {module:model/DeploymentStatus.StateEnum} state
 */
DeploymentStatus.prototype['state'] = undefined;

/**
 * @member {module:model/NullableSimpleUser} creator
 */
DeploymentStatus.prototype['creator'] = undefined;

/**
 * A short description of the status.
 * @member {String} description
 * @default ''
 */
DeploymentStatus.prototype['description'] = '';

/**
 * The environment of the deployment that the status is for.
 * @member {String} environment
 * @default ''
 */
DeploymentStatus.prototype['environment'] = '';

/**
 * Deprecated: the URL to associate with this status.
 * @member {String} target_url
 * @default ''
 */
DeploymentStatus.prototype['target_url'] = '';

/**
 * @member {Date} created_at
 */
DeploymentStatus.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
DeploymentStatus.prototype['updated_at'] = undefined;

/**
 * @member {String} deployment_url
 */
DeploymentStatus.prototype['deployment_url'] = undefined;

/**
 * @member {String} repository_url
 */
DeploymentStatus.prototype['repository_url'] = undefined;

/**
 * The URL for accessing your environment.
 * @member {String} environment_url
 * @default ''
 */
DeploymentStatus.prototype['environment_url'] = '';

/**
 * The URL to associate with this status.
 * @member {String} log_url
 * @default ''
 */
DeploymentStatus.prototype['log_url'] = '';

/**
 * @member {module:model/NullableIntegration} performed_via_github_app
 */
DeploymentStatus.prototype['performed_via_github_app'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
DeploymentStatus['StateEnum'] = {

    /**
     * value: "error"
     * @const
     */
    "error": "error",

    /**
     * value: "failure"
     * @const
     */
    "failure": "failure",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "success"
     * @const
     */
    "success": "success",

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "in_progress"
     * @const
     */
    "in_progress": "in_progress"
};



export default DeploymentStatus;

