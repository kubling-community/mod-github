/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SponsorshipTier model module.
 * @module model/SponsorshipTier
 * @version 1.1.4
 */
class SponsorshipTier {
    /**
     * Constructs a new <code>SponsorshipTier</code>.
     * The &#x60;tier_changed&#x60; and &#x60;pending_tier_change&#x60; will include the original tier before the change or pending change. For more information, see the pending tier change payload.
     * @alias module:model/SponsorshipTier
     * @param createdAt {String} 
     * @param description {String} 
     * @param isOneTime {Boolean} 
     * @param monthlyPriceInCents {Number} 
     * @param monthlyPriceInDollars {Number} 
     * @param name {String} 
     * @param nodeId {String} 
     */
    constructor(createdAt, description, isOneTime, monthlyPriceInCents, monthlyPriceInDollars, name, nodeId) { 
        
        SponsorshipTier.initialize(this, createdAt, description, isOneTime, monthlyPriceInCents, monthlyPriceInDollars, name, nodeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, description, isOneTime, monthlyPriceInCents, monthlyPriceInDollars, name, nodeId) { 
        obj['created_at'] = createdAt;
        obj['description'] = description;
        obj['is_one_time'] = isOneTime;
        obj['monthly_price_in_cents'] = monthlyPriceInCents;
        obj['monthly_price_in_dollars'] = monthlyPriceInDollars;
        obj['name'] = name;
        obj['node_id'] = nodeId;
    }

    /**
     * Constructs a <code>SponsorshipTier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SponsorshipTier} obj Optional instance to populate.
     * @return {module:model/SponsorshipTier} The populated <code>SponsorshipTier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SponsorshipTier();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('is_custom_ammount')) {
                obj['is_custom_ammount'] = ApiClient.convertToType(data['is_custom_ammount'], 'Boolean');
            }
            if (data.hasOwnProperty('is_custom_amount')) {
                obj['is_custom_amount'] = ApiClient.convertToType(data['is_custom_amount'], 'Boolean');
            }
            if (data.hasOwnProperty('is_one_time')) {
                obj['is_one_time'] = ApiClient.convertToType(data['is_one_time'], 'Boolean');
            }
            if (data.hasOwnProperty('monthly_price_in_cents')) {
                obj['monthly_price_in_cents'] = ApiClient.convertToType(data['monthly_price_in_cents'], 'Number');
            }
            if (data.hasOwnProperty('monthly_price_in_dollars')) {
                obj['monthly_price_in_dollars'] = ApiClient.convertToType(data['monthly_price_in_dollars'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SponsorshipTier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SponsorshipTier</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SponsorshipTier.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }

        return true;
    }


}

SponsorshipTier.RequiredProperties = ["created_at", "description", "is_one_time", "monthly_price_in_cents", "monthly_price_in_dollars", "name", "node_id"];

/**
 * @member {String} created_at
 */
SponsorshipTier.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
SponsorshipTier.prototype['description'] = undefined;

/**
 * @member {Boolean} is_custom_ammount
 */
SponsorshipTier.prototype['is_custom_ammount'] = undefined;

/**
 * @member {Boolean} is_custom_amount
 */
SponsorshipTier.prototype['is_custom_amount'] = undefined;

/**
 * @member {Boolean} is_one_time
 */
SponsorshipTier.prototype['is_one_time'] = undefined;

/**
 * @member {Number} monthly_price_in_cents
 */
SponsorshipTier.prototype['monthly_price_in_cents'] = undefined;

/**
 * @member {Number} monthly_price_in_dollars
 */
SponsorshipTier.prototype['monthly_price_in_dollars'] = undefined;

/**
 * @member {String} name
 */
SponsorshipTier.prototype['name'] = undefined;

/**
 * @member {String} node_id
 */
SponsorshipTier.prototype['node_id'] = undefined;






export default SponsorshipTier;

