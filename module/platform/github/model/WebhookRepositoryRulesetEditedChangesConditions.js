/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RepositoryRulesetConditions from './RepositoryRulesetConditions';
import WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner from './WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner';

/**
 * The WebhookRepositoryRulesetEditedChangesConditions model module.
 * @module model/WebhookRepositoryRulesetEditedChangesConditions
 * @version 1.1.4
 */
class WebhookRepositoryRulesetEditedChangesConditions {
    /**
     * Constructs a new <code>WebhookRepositoryRulesetEditedChangesConditions</code>.
     * @alias module:model/WebhookRepositoryRulesetEditedChangesConditions
     */
    constructor() { 
        
        WebhookRepositoryRulesetEditedChangesConditions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookRepositoryRulesetEditedChangesConditions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookRepositoryRulesetEditedChangesConditions} obj Optional instance to populate.
     * @return {module:model/WebhookRepositoryRulesetEditedChangesConditions} The populated <code>WebhookRepositoryRulesetEditedChangesConditions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookRepositoryRulesetEditedChangesConditions();

            if (data.hasOwnProperty('added')) {
                obj['added'] = ApiClient.convertToType(data['added'], [RepositoryRulesetConditions]);
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], [RepositoryRulesetConditions]);
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], [WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookRepositoryRulesetEditedChangesConditions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookRepositoryRulesetEditedChangesConditions</code>.
     */
    static validateJSON(data) {
        if (data['added']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['added'])) {
                throw new Error("Expected the field `added` to be an array in the JSON data but got " + data['added']);
            }
            // validate the optional field `added` (array)
            for (const item of data['added']) {
                RepositoryRulesetConditions.validateJSON(item);
            };
        }
        if (data['deleted']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['deleted'])) {
                throw new Error("Expected the field `deleted` to be an array in the JSON data but got " + data['deleted']);
            }
            // validate the optional field `deleted` (array)
            for (const item of data['deleted']) {
                RepositoryRulesetConditions.validateJSON(item);
            };
        }
        if (data['updated']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['updated'])) {
                throw new Error("Expected the field `updated` to be an array in the JSON data but got " + data['updated']);
            }
            // validate the optional field `updated` (array)
            for (const item of data['updated']) {
                WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/RepositoryRulesetConditions>} added
 */
WebhookRepositoryRulesetEditedChangesConditions.prototype['added'] = undefined;

/**
 * @member {Array.<module:model/RepositoryRulesetConditions>} deleted
 */
WebhookRepositoryRulesetEditedChangesConditions.prototype['deleted'] = undefined;

/**
 * @member {Array.<module:model/WebhookRepositoryRulesetEditedChangesConditionsUpdatedInner>} updated
 */
WebhookRepositoryRulesetEditedChangesConditions.prototype['updated'] = undefined;






export default WebhookRepositoryRulesetEditedChangesConditions;

