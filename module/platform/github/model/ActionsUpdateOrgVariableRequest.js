/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActionsUpdateOrgVariableRequest model module.
 * @module model/ActionsUpdateOrgVariableRequest
 * @version 1.1.4
 */
class ActionsUpdateOrgVariableRequest {
    /**
     * Constructs a new <code>ActionsUpdateOrgVariableRequest</code>.
     * @alias module:model/ActionsUpdateOrgVariableRequest
     */
    constructor() { 
        
        ActionsUpdateOrgVariableRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActionsUpdateOrgVariableRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionsUpdateOrgVariableRequest} obj Optional instance to populate.
     * @return {module:model/ActionsUpdateOrgVariableRequest} The populated <code>ActionsUpdateOrgVariableRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionsUpdateOrgVariableRequest();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('selected_repository_ids')) {
                obj['selected_repository_ids'] = ApiClient.convertToType(data['selected_repository_ids'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionsUpdateOrgVariableRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionsUpdateOrgVariableRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['selected_repository_ids'])) {
            throw new Error("Expected the field `selected_repository_ids` to be an array in the JSON data but got " + data['selected_repository_ids']);
        }

        return true;
    }


}



/**
 * The name of the variable.
 * @member {String} name
 */
ActionsUpdateOrgVariableRequest.prototype['name'] = undefined;

/**
 * The value of the variable.
 * @member {String} value
 */
ActionsUpdateOrgVariableRequest.prototype['value'] = undefined;

/**
 * The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.
 * @member {module:model/ActionsUpdateOrgVariableRequest.VisibilityEnum} visibility
 */
ActionsUpdateOrgVariableRequest.prototype['visibility'] = undefined;

/**
 * An array of repository ids that can access the organization variable. You can only provide a list of repository ids when the `visibility` is set to `selected`.
 * @member {Array.<Number>} selected_repository_ids
 */
ActionsUpdateOrgVariableRequest.prototype['selected_repository_ids'] = undefined;





/**
 * Allowed values for the <code>visibility</code> property.
 * @enum {String}
 * @readonly
 */
ActionsUpdateOrgVariableRequest['VisibilityEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "private"
     * @const
     */
    "private": "private",

    /**
     * value: "selected"
     * @const
     */
    "selected": "selected"
};



export default ActionsUpdateOrgVariableRequest;

