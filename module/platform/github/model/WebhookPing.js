/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrganizationSimpleWebhooks from './OrganizationSimpleWebhooks';
import RepositoryWebhooks from './RepositoryWebhooks';
import SimpleUserWebhooks from './SimpleUserWebhooks';
import Webhook from './Webhook';

/**
 * The WebhookPing model module.
 * @module model/WebhookPing
 * @version 1.1.4
 */
class WebhookPing {
    /**
     * Constructs a new <code>WebhookPing</code>.
     * @alias module:model/WebhookPing
     */
    constructor() { 
        
        WebhookPing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookPing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookPing} obj Optional instance to populate.
     * @return {module:model/WebhookPing} The populated <code>WebhookPing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookPing();

            if (data.hasOwnProperty('hook')) {
                obj['hook'] = Webhook.constructFromObject(data['hook']);
            }
            if (data.hasOwnProperty('hook_id')) {
                obj['hook_id'] = ApiClient.convertToType(data['hook_id'], 'Number');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = OrganizationSimpleWebhooks.constructFromObject(data['organization']);
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = RepositoryWebhooks.constructFromObject(data['repository']);
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = SimpleUserWebhooks.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('zen')) {
                obj['zen'] = ApiClient.convertToType(data['zen'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookPing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookPing</code>.
     */
    static validateJSON(data) {
        // validate the optional field `hook`
        if (data['hook']) { // data not null
          Webhook.validateJSON(data['hook']);
        }
        // validate the optional field `organization`
        if (data['organization']) { // data not null
          OrganizationSimpleWebhooks.validateJSON(data['organization']);
        }
        // validate the optional field `repository`
        if (data['repository']) { // data not null
          RepositoryWebhooks.validateJSON(data['repository']);
        }
        // validate the optional field `sender`
        if (data['sender']) { // data not null
          SimpleUserWebhooks.validateJSON(data['sender']);
        }
        // ensure the json data is a string
        if (data['zen'] && !(typeof data['zen'] === 'string' || data['zen'] instanceof String)) {
            throw new Error("Expected the field `zen` to be a primitive type in the JSON string but got " + data['zen']);
        }

        return true;
    }


}



/**
 * @member {module:model/Webhook} hook
 */
WebhookPing.prototype['hook'] = undefined;

/**
 * The ID of the webhook that triggered the ping.
 * @member {Number} hook_id
 */
WebhookPing.prototype['hook_id'] = undefined;

/**
 * @member {module:model/OrganizationSimpleWebhooks} organization
 */
WebhookPing.prototype['organization'] = undefined;

/**
 * @member {module:model/RepositoryWebhooks} repository
 */
WebhookPing.prototype['repository'] = undefined;

/**
 * @member {module:model/SimpleUserWebhooks} sender
 */
WebhookPing.prototype['sender'] = undefined;

/**
 * Random string of GitHub zen.
 * @member {String} zen
 */
WebhookPing.prototype['zen'] = undefined;






export default WebhookPing;

