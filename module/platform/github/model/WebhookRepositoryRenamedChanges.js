/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookRepositoryRenamedChangesRepository from './WebhookRepositoryRenamedChangesRepository';

/**
 * The WebhookRepositoryRenamedChanges model module.
 * @module model/WebhookRepositoryRenamedChanges
 * @version 1.1.4
 */
class WebhookRepositoryRenamedChanges {
    /**
     * Constructs a new <code>WebhookRepositoryRenamedChanges</code>.
     * @alias module:model/WebhookRepositoryRenamedChanges
     * @param repository {module:model/WebhookRepositoryRenamedChangesRepository} 
     */
    constructor(repository) { 
        
        WebhookRepositoryRenamedChanges.initialize(this, repository);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, repository) { 
        obj['repository'] = repository;
    }

    /**
     * Constructs a <code>WebhookRepositoryRenamedChanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookRepositoryRenamedChanges} obj Optional instance to populate.
     * @return {module:model/WebhookRepositoryRenamedChanges} The populated <code>WebhookRepositoryRenamedChanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookRepositoryRenamedChanges();

            if (data.hasOwnProperty('repository')) {
                obj['repository'] = WebhookRepositoryRenamedChangesRepository.constructFromObject(data['repository']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookRepositoryRenamedChanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookRepositoryRenamedChanges</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookRepositoryRenamedChanges.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `repository`
        if (data['repository']) { // data not null
          WebhookRepositoryRenamedChangesRepository.validateJSON(data['repository']);
        }

        return true;
    }


}

WebhookRepositoryRenamedChanges.RequiredProperties = ["repository"];

/**
 * @member {module:model/WebhookRepositoryRenamedChangesRepository} repository
 */
WebhookRepositoryRenamedChanges.prototype['repository'] = undefined;






export default WebhookRepositoryRenamedChanges;

