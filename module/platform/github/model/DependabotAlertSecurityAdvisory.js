/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DependabotAlertSecurityAdvisoryCvss from './DependabotAlertSecurityAdvisoryCvss';
import DependabotAlertSecurityAdvisoryCwesInner from './DependabotAlertSecurityAdvisoryCwesInner';
import DependabotAlertSecurityAdvisoryIdentifiersInner from './DependabotAlertSecurityAdvisoryIdentifiersInner';
import DependabotAlertSecurityAdvisoryReferencesInner from './DependabotAlertSecurityAdvisoryReferencesInner';
import DependabotAlertSecurityVulnerability from './DependabotAlertSecurityVulnerability';

/**
 * The DependabotAlertSecurityAdvisory model module.
 * @module model/DependabotAlertSecurityAdvisory
 * @version 1.1.4
 */
class DependabotAlertSecurityAdvisory {
    /**
     * Constructs a new <code>DependabotAlertSecurityAdvisory</code>.
     * Details for the GitHub Security Advisory.
     * @alias module:model/DependabotAlertSecurityAdvisory
     * @param ghsaId {String} The unique GitHub Security Advisory ID assigned to the advisory.
     * @param cveId {String} The unique CVE ID assigned to the advisory.
     * @param summary {String} A short, plain text summary of the advisory.
     * @param description {String} A long-form Markdown-supported description of the advisory.
     * @param vulnerabilities {Array.<module:model/DependabotAlertSecurityVulnerability>} Vulnerable version range information for the advisory.
     * @param severity {module:model/DependabotAlertSecurityAdvisory.SeverityEnum} The severity of the advisory.
     * @param cvss {module:model/DependabotAlertSecurityAdvisoryCvss} 
     * @param cwes {Array.<module:model/DependabotAlertSecurityAdvisoryCwesInner>} Details for the advisory pertaining to Common Weakness Enumeration.
     * @param identifiers {Array.<module:model/DependabotAlertSecurityAdvisoryIdentifiersInner>} Values that identify this advisory among security information sources.
     * @param references {Array.<module:model/DependabotAlertSecurityAdvisoryReferencesInner>} Links to additional advisory information.
     * @param publishedAt {Date} The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param updatedAt {Date} The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * @param withdrawnAt {Date} The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    constructor(ghsaId, cveId, summary, description, vulnerabilities, severity, cvss, cwes, identifiers, references, publishedAt, updatedAt, withdrawnAt) { 
        
        DependabotAlertSecurityAdvisory.initialize(this, ghsaId, cveId, summary, description, vulnerabilities, severity, cvss, cwes, identifiers, references, publishedAt, updatedAt, withdrawnAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ghsaId, cveId, summary, description, vulnerabilities, severity, cvss, cwes, identifiers, references, publishedAt, updatedAt, withdrawnAt) { 
        obj['ghsa_id'] = ghsaId;
        obj['cve_id'] = cveId;
        obj['summary'] = summary;
        obj['description'] = description;
        obj['vulnerabilities'] = vulnerabilities;
        obj['severity'] = severity;
        obj['cvss'] = cvss;
        obj['cwes'] = cwes;
        obj['identifiers'] = identifiers;
        obj['references'] = references;
        obj['published_at'] = publishedAt;
        obj['updated_at'] = updatedAt;
        obj['withdrawn_at'] = withdrawnAt;
    }

    /**
     * Constructs a <code>DependabotAlertSecurityAdvisory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DependabotAlertSecurityAdvisory} obj Optional instance to populate.
     * @return {module:model/DependabotAlertSecurityAdvisory} The populated <code>DependabotAlertSecurityAdvisory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DependabotAlertSecurityAdvisory();

            if (data.hasOwnProperty('ghsa_id')) {
                obj['ghsa_id'] = ApiClient.convertToType(data['ghsa_id'], 'String');
            }
            if (data.hasOwnProperty('cve_id')) {
                obj['cve_id'] = ApiClient.convertToType(data['cve_id'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('vulnerabilities')) {
                obj['vulnerabilities'] = ApiClient.convertToType(data['vulnerabilities'], [DependabotAlertSecurityVulnerability]);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('cvss')) {
                obj['cvss'] = DependabotAlertSecurityAdvisoryCvss.constructFromObject(data['cvss']);
            }
            if (data.hasOwnProperty('cwes')) {
                obj['cwes'] = ApiClient.convertToType(data['cwes'], [DependabotAlertSecurityAdvisoryCwesInner]);
            }
            if (data.hasOwnProperty('identifiers')) {
                obj['identifiers'] = ApiClient.convertToType(data['identifiers'], [DependabotAlertSecurityAdvisoryIdentifiersInner]);
            }
            if (data.hasOwnProperty('references')) {
                obj['references'] = ApiClient.convertToType(data['references'], [DependabotAlertSecurityAdvisoryReferencesInner]);
            }
            if (data.hasOwnProperty('published_at')) {
                obj['published_at'] = ApiClient.convertToType(data['published_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('withdrawn_at')) {
                obj['withdrawn_at'] = ApiClient.convertToType(data['withdrawn_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DependabotAlertSecurityAdvisory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DependabotAlertSecurityAdvisory</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DependabotAlertSecurityAdvisory.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ghsa_id'] && !(typeof data['ghsa_id'] === 'string' || data['ghsa_id'] instanceof String)) {
            throw new Error("Expected the field `ghsa_id` to be a primitive type in the JSON string but got " + data['ghsa_id']);
        }
        // ensure the json data is a string
        if (data['cve_id'] && !(typeof data['cve_id'] === 'string' || data['cve_id'] instanceof String)) {
            throw new Error("Expected the field `cve_id` to be a primitive type in the JSON string but got " + data['cve_id']);
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['vulnerabilities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vulnerabilities'])) {
                throw new Error("Expected the field `vulnerabilities` to be an array in the JSON data but got " + data['vulnerabilities']);
            }
            // validate the optional field `vulnerabilities` (array)
            for (const item of data['vulnerabilities']) {
                DependabotAlertSecurityVulnerability.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // validate the optional field `cvss`
        if (data['cvss']) { // data not null
          DependabotAlertSecurityAdvisoryCvss.validateJSON(data['cvss']);
        }
        if (data['cwes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cwes'])) {
                throw new Error("Expected the field `cwes` to be an array in the JSON data but got " + data['cwes']);
            }
            // validate the optional field `cwes` (array)
            for (const item of data['cwes']) {
                DependabotAlertSecurityAdvisoryCwesInner.validateJSON(item);
            };
        }
        if (data['identifiers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['identifiers'])) {
                throw new Error("Expected the field `identifiers` to be an array in the JSON data but got " + data['identifiers']);
            }
            // validate the optional field `identifiers` (array)
            for (const item of data['identifiers']) {
                DependabotAlertSecurityAdvisoryIdentifiersInner.validateJSON(item);
            };
        }
        if (data['references']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['references'])) {
                throw new Error("Expected the field `references` to be an array in the JSON data but got " + data['references']);
            }
            // validate the optional field `references` (array)
            for (const item of data['references']) {
                DependabotAlertSecurityAdvisoryReferencesInner.validateJSON(item);
            };
        }

        return true;
    }


}

DependabotAlertSecurityAdvisory.RequiredProperties = ["ghsa_id", "cve_id", "summary", "description", "vulnerabilities", "severity", "cvss", "cwes", "identifiers", "references", "published_at", "updated_at", "withdrawn_at"];

/**
 * The unique GitHub Security Advisory ID assigned to the advisory.
 * @member {String} ghsa_id
 */
DependabotAlertSecurityAdvisory.prototype['ghsa_id'] = undefined;

/**
 * The unique CVE ID assigned to the advisory.
 * @member {String} cve_id
 */
DependabotAlertSecurityAdvisory.prototype['cve_id'] = undefined;

/**
 * A short, plain text summary of the advisory.
 * @member {String} summary
 */
DependabotAlertSecurityAdvisory.prototype['summary'] = undefined;

/**
 * A long-form Markdown-supported description of the advisory.
 * @member {String} description
 */
DependabotAlertSecurityAdvisory.prototype['description'] = undefined;

/**
 * Vulnerable version range information for the advisory.
 * @member {Array.<module:model/DependabotAlertSecurityVulnerability>} vulnerabilities
 */
DependabotAlertSecurityAdvisory.prototype['vulnerabilities'] = undefined;

/**
 * The severity of the advisory.
 * @member {module:model/DependabotAlertSecurityAdvisory.SeverityEnum} severity
 */
DependabotAlertSecurityAdvisory.prototype['severity'] = undefined;

/**
 * @member {module:model/DependabotAlertSecurityAdvisoryCvss} cvss
 */
DependabotAlertSecurityAdvisory.prototype['cvss'] = undefined;

/**
 * Details for the advisory pertaining to Common Weakness Enumeration.
 * @member {Array.<module:model/DependabotAlertSecurityAdvisoryCwesInner>} cwes
 */
DependabotAlertSecurityAdvisory.prototype['cwes'] = undefined;

/**
 * Values that identify this advisory among security information sources.
 * @member {Array.<module:model/DependabotAlertSecurityAdvisoryIdentifiersInner>} identifiers
 */
DependabotAlertSecurityAdvisory.prototype['identifiers'] = undefined;

/**
 * Links to additional advisory information.
 * @member {Array.<module:model/DependabotAlertSecurityAdvisoryReferencesInner>} references
 */
DependabotAlertSecurityAdvisory.prototype['references'] = undefined;

/**
 * The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} published_at
 */
DependabotAlertSecurityAdvisory.prototype['published_at'] = undefined;

/**
 * The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} updated_at
 */
DependabotAlertSecurityAdvisory.prototype['updated_at'] = undefined;

/**
 * The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
 * @member {Date} withdrawn_at
 */
DependabotAlertSecurityAdvisory.prototype['withdrawn_at'] = undefined;





/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
DependabotAlertSecurityAdvisory['SeverityEnum'] = {

    /**
     * value: "low"
     * @const
     */
    "low": "low",

    /**
     * value: "medium"
     * @const
     */
    "medium": "medium",

    /**
     * value: "high"
     * @const
     */
    "high": "high",

    /**
     * value: "critical"
     * @const
     */
    "critical": "critical"
};



export default DependabotAlertSecurityAdvisory;

