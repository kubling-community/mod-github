/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RepositoryRuleParamsStatusCheckConfiguration from './RepositoryRuleParamsStatusCheckConfiguration';

/**
 * The RepositoryRuleRequiredStatusChecksParameters model module.
 * @module model/RepositoryRuleRequiredStatusChecksParameters
 * @version 1.1.4
 */
class RepositoryRuleRequiredStatusChecksParameters {
    /**
     * Constructs a new <code>RepositoryRuleRequiredStatusChecksParameters</code>.
     * @alias module:model/RepositoryRuleRequiredStatusChecksParameters
     * @param requiredStatusChecks {Array.<module:model/RepositoryRuleParamsStatusCheckConfiguration>} Status checks that are required.
     * @param strictRequiredStatusChecksPolicy {Boolean} Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.
     */
    constructor(requiredStatusChecks, strictRequiredStatusChecksPolicy) { 
        
        RepositoryRuleRequiredStatusChecksParameters.initialize(this, requiredStatusChecks, strictRequiredStatusChecksPolicy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requiredStatusChecks, strictRequiredStatusChecksPolicy) { 
        obj['required_status_checks'] = requiredStatusChecks;
        obj['strict_required_status_checks_policy'] = strictRequiredStatusChecksPolicy;
    }

    /**
     * Constructs a <code>RepositoryRuleRequiredStatusChecksParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepositoryRuleRequiredStatusChecksParameters} obj Optional instance to populate.
     * @return {module:model/RepositoryRuleRequiredStatusChecksParameters} The populated <code>RepositoryRuleRequiredStatusChecksParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepositoryRuleRequiredStatusChecksParameters();

            if (data.hasOwnProperty('required_status_checks')) {
                obj['required_status_checks'] = ApiClient.convertToType(data['required_status_checks'], [RepositoryRuleParamsStatusCheckConfiguration]);
            }
            if (data.hasOwnProperty('strict_required_status_checks_policy')) {
                obj['strict_required_status_checks_policy'] = ApiClient.convertToType(data['strict_required_status_checks_policy'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepositoryRuleRequiredStatusChecksParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepositoryRuleRequiredStatusChecksParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RepositoryRuleRequiredStatusChecksParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['required_status_checks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['required_status_checks'])) {
                throw new Error("Expected the field `required_status_checks` to be an array in the JSON data but got " + data['required_status_checks']);
            }
            // validate the optional field `required_status_checks` (array)
            for (const item of data['required_status_checks']) {
                RepositoryRuleParamsStatusCheckConfiguration.validateJSON(item);
            };
        }

        return true;
    }


}

RepositoryRuleRequiredStatusChecksParameters.RequiredProperties = ["required_status_checks", "strict_required_status_checks_policy"];

/**
 * Status checks that are required.
 * @member {Array.<module:model/RepositoryRuleParamsStatusCheckConfiguration>} required_status_checks
 */
RepositoryRuleRequiredStatusChecksParameters.prototype['required_status_checks'] = undefined;

/**
 * Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.
 * @member {Boolean} strict_required_status_checks_policy
 */
RepositoryRuleRequiredStatusChecksParameters.prototype['strict_required_status_checks_policy'] = undefined;






export default RepositoryRuleRequiredStatusChecksParameters;

