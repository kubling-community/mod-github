/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganizationActionsVariable model module.
 * @module model/OrganizationActionsVariable
 * @version 1.1.4
 */
class OrganizationActionsVariable {
    /**
     * Constructs a new <code>OrganizationActionsVariable</code>.
     * Organization variable for GitHub Actions.
     * @alias module:model/OrganizationActionsVariable
     * @param name {String} The name of the variable.
     * @param value {String} The value of the variable.
     * @param createdAt {Date} The date and time at which the variable was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
     * @param updatedAt {Date} The date and time at which the variable was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
     * @param visibility {module:model/OrganizationActionsVariable.VisibilityEnum} Visibility of a variable
     */
    constructor(name, value, createdAt, updatedAt, visibility) { 
        
        OrganizationActionsVariable.initialize(this, name, value, createdAt, updatedAt, visibility);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, value, createdAt, updatedAt, visibility) { 
        obj['name'] = name;
        obj['value'] = value;
        obj['created_at'] = createdAt;
        obj['updated_at'] = updatedAt;
        obj['visibility'] = visibility;
    }

    /**
     * Constructs a <code>OrganizationActionsVariable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationActionsVariable} obj Optional instance to populate.
     * @return {module:model/OrganizationActionsVariable} The populated <code>OrganizationActionsVariable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationActionsVariable();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('selected_repositories_url')) {
                obj['selected_repositories_url'] = ApiClient.convertToType(data['selected_repositories_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationActionsVariable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationActionsVariable</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrganizationActionsVariable.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }
        // ensure the json data is a string
        if (data['selected_repositories_url'] && !(typeof data['selected_repositories_url'] === 'string' || data['selected_repositories_url'] instanceof String)) {
            throw new Error("Expected the field `selected_repositories_url` to be a primitive type in the JSON string but got " + data['selected_repositories_url']);
        }

        return true;
    }


}

OrganizationActionsVariable.RequiredProperties = ["name", "value", "created_at", "updated_at", "visibility"];

/**
 * The name of the variable.
 * @member {String} name
 */
OrganizationActionsVariable.prototype['name'] = undefined;

/**
 * The value of the variable.
 * @member {String} value
 */
OrganizationActionsVariable.prototype['value'] = undefined;

/**
 * The date and time at which the variable was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
 * @member {Date} created_at
 */
OrganizationActionsVariable.prototype['created_at'] = undefined;

/**
 * The date and time at which the variable was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
 * @member {Date} updated_at
 */
OrganizationActionsVariable.prototype['updated_at'] = undefined;

/**
 * Visibility of a variable
 * @member {module:model/OrganizationActionsVariable.VisibilityEnum} visibility
 */
OrganizationActionsVariable.prototype['visibility'] = undefined;

/**
 * @member {String} selected_repositories_url
 */
OrganizationActionsVariable.prototype['selected_repositories_url'] = undefined;





/**
 * Allowed values for the <code>visibility</code> property.
 * @enum {String}
 * @readonly
 */
OrganizationActionsVariable['VisibilityEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "private"
     * @const
     */
    "private": "private",

    /**
     * value: "selected"
     * @const
     */
    "selected": "selected"
};



export default OrganizationActionsVariable;

