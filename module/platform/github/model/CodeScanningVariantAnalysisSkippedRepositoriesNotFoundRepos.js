/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos model module.
 * @module model/CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos
 * @version 1.1.4
 */
class CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos {
    /**
     * Constructs a new <code>CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos</code>.
     * @alias module:model/CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos
     * @param repositoryCount {Number} The total number of repositories that were skipped for this reason.
     * @param repositoryFullNames {Array.<String>} A list of full repository names that were skipped. This list may not include all repositories that were skipped.
     */
    constructor(repositoryCount, repositoryFullNames) { 
        
        CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos.initialize(this, repositoryCount, repositoryFullNames);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, repositoryCount, repositoryFullNames) { 
        obj['repository_count'] = repositoryCount;
        obj['repository_full_names'] = repositoryFullNames;
    }

    /**
     * Constructs a <code>CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos} obj Optional instance to populate.
     * @return {module:model/CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos} The populated <code>CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos();

            if (data.hasOwnProperty('repository_count')) {
                obj['repository_count'] = ApiClient.convertToType(data['repository_count'], 'Number');
            }
            if (data.hasOwnProperty('repository_full_names')) {
                obj['repository_full_names'] = ApiClient.convertToType(data['repository_full_names'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['repository_full_names'])) {
            throw new Error("Expected the field `repository_full_names` to be an array in the JSON data but got " + data['repository_full_names']);
        }

        return true;
    }


}

CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos.RequiredProperties = ["repository_count", "repository_full_names"];

/**
 * The total number of repositories that were skipped for this reason.
 * @member {Number} repository_count
 */
CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos.prototype['repository_count'] = undefined;

/**
 * A list of full repository names that were skipped. This list may not include all repositories that were skipped.
 * @member {Array.<String>} repository_full_names
 */
CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos.prototype['repository_full_names'] = undefined;






export default CodeScanningVariantAnalysisSkippedRepositoriesNotFoundRepos;

