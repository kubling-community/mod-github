/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrganizationSimpleWebhooks model module.
 * @module model/OrganizationSimpleWebhooks
 * @version 1.1.4
 */
class OrganizationSimpleWebhooks {
    /**
     * Constructs a new <code>OrganizationSimpleWebhooks</code>.
     * A GitHub organization. Webhook payloads contain the &#x60;organization&#x60; property when the webhook is configured for an organization, or when the event occurs from activity in a repository owned by an organization.
     * @alias module:model/OrganizationSimpleWebhooks
     * @param login {String} 
     * @param id {Number} 
     * @param nodeId {String} 
     * @param url {String} 
     * @param reposUrl {String} 
     * @param eventsUrl {String} 
     * @param hooksUrl {String} 
     * @param issuesUrl {String} 
     * @param membersUrl {String} 
     * @param publicMembersUrl {String} 
     * @param avatarUrl {String} 
     * @param description {String} 
     */
    constructor(login, id, nodeId, url, reposUrl, eventsUrl, hooksUrl, issuesUrl, membersUrl, publicMembersUrl, avatarUrl, description) { 
        
        OrganizationSimpleWebhooks.initialize(this, login, id, nodeId, url, reposUrl, eventsUrl, hooksUrl, issuesUrl, membersUrl, publicMembersUrl, avatarUrl, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, login, id, nodeId, url, reposUrl, eventsUrl, hooksUrl, issuesUrl, membersUrl, publicMembersUrl, avatarUrl, description) { 
        obj['login'] = login;
        obj['id'] = id;
        obj['node_id'] = nodeId;
        obj['url'] = url;
        obj['repos_url'] = reposUrl;
        obj['events_url'] = eventsUrl;
        obj['hooks_url'] = hooksUrl;
        obj['issues_url'] = issuesUrl;
        obj['members_url'] = membersUrl;
        obj['public_members_url'] = publicMembersUrl;
        obj['avatar_url'] = avatarUrl;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>OrganizationSimpleWebhooks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationSimpleWebhooks} obj Optional instance to populate.
     * @return {module:model/OrganizationSimpleWebhooks} The populated <code>OrganizationSimpleWebhooks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationSimpleWebhooks();

            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('repos_url')) {
                obj['repos_url'] = ApiClient.convertToType(data['repos_url'], 'String');
            }
            if (data.hasOwnProperty('events_url')) {
                obj['events_url'] = ApiClient.convertToType(data['events_url'], 'String');
            }
            if (data.hasOwnProperty('hooks_url')) {
                obj['hooks_url'] = ApiClient.convertToType(data['hooks_url'], 'String');
            }
            if (data.hasOwnProperty('issues_url')) {
                obj['issues_url'] = ApiClient.convertToType(data['issues_url'], 'String');
            }
            if (data.hasOwnProperty('members_url')) {
                obj['members_url'] = ApiClient.convertToType(data['members_url'], 'String');
            }
            if (data.hasOwnProperty('public_members_url')) {
                obj['public_members_url'] = ApiClient.convertToType(data['public_members_url'], 'String');
            }
            if (data.hasOwnProperty('avatar_url')) {
                obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationSimpleWebhooks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationSimpleWebhooks</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrganizationSimpleWebhooks.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['login'] && !(typeof data['login'] === 'string' || data['login'] instanceof String)) {
            throw new Error("Expected the field `login` to be a primitive type in the JSON string but got " + data['login']);
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['repos_url'] && !(typeof data['repos_url'] === 'string' || data['repos_url'] instanceof String)) {
            throw new Error("Expected the field `repos_url` to be a primitive type in the JSON string but got " + data['repos_url']);
        }
        // ensure the json data is a string
        if (data['events_url'] && !(typeof data['events_url'] === 'string' || data['events_url'] instanceof String)) {
            throw new Error("Expected the field `events_url` to be a primitive type in the JSON string but got " + data['events_url']);
        }
        // ensure the json data is a string
        if (data['hooks_url'] && !(typeof data['hooks_url'] === 'string' || data['hooks_url'] instanceof String)) {
            throw new Error("Expected the field `hooks_url` to be a primitive type in the JSON string but got " + data['hooks_url']);
        }
        // ensure the json data is a string
        if (data['issues_url'] && !(typeof data['issues_url'] === 'string' || data['issues_url'] instanceof String)) {
            throw new Error("Expected the field `issues_url` to be a primitive type in the JSON string but got " + data['issues_url']);
        }
        // ensure the json data is a string
        if (data['members_url'] && !(typeof data['members_url'] === 'string' || data['members_url'] instanceof String)) {
            throw new Error("Expected the field `members_url` to be a primitive type in the JSON string but got " + data['members_url']);
        }
        // ensure the json data is a string
        if (data['public_members_url'] && !(typeof data['public_members_url'] === 'string' || data['public_members_url'] instanceof String)) {
            throw new Error("Expected the field `public_members_url` to be a primitive type in the JSON string but got " + data['public_members_url']);
        }
        // ensure the json data is a string
        if (data['avatar_url'] && !(typeof data['avatar_url'] === 'string' || data['avatar_url'] instanceof String)) {
            throw new Error("Expected the field `avatar_url` to be a primitive type in the JSON string but got " + data['avatar_url']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}

OrganizationSimpleWebhooks.RequiredProperties = ["login", "id", "node_id", "url", "repos_url", "events_url", "hooks_url", "issues_url", "members_url", "public_members_url", "avatar_url", "description"];

/**
 * @member {String} login
 */
OrganizationSimpleWebhooks.prototype['login'] = undefined;

/**
 * @member {Number} id
 */
OrganizationSimpleWebhooks.prototype['id'] = undefined;

/**
 * @member {String} node_id
 */
OrganizationSimpleWebhooks.prototype['node_id'] = undefined;

/**
 * @member {String} url
 */
OrganizationSimpleWebhooks.prototype['url'] = undefined;

/**
 * @member {String} repos_url
 */
OrganizationSimpleWebhooks.prototype['repos_url'] = undefined;

/**
 * @member {String} events_url
 */
OrganizationSimpleWebhooks.prototype['events_url'] = undefined;

/**
 * @member {String} hooks_url
 */
OrganizationSimpleWebhooks.prototype['hooks_url'] = undefined;

/**
 * @member {String} issues_url
 */
OrganizationSimpleWebhooks.prototype['issues_url'] = undefined;

/**
 * @member {String} members_url
 */
OrganizationSimpleWebhooks.prototype['members_url'] = undefined;

/**
 * @member {String} public_members_url
 */
OrganizationSimpleWebhooks.prototype['public_members_url'] = undefined;

/**
 * @member {String} avatar_url
 */
OrganizationSimpleWebhooks.prototype['avatar_url'] = undefined;

/**
 * @member {String} description
 */
OrganizationSimpleWebhooks.prototype['description'] = undefined;






export default OrganizationSimpleWebhooks;

