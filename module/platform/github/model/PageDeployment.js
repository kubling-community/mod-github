/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PageDeploymentId from './PageDeploymentId';

/**
 * The PageDeployment model module.
 * @module model/PageDeployment
 * @version 1.1.4
 */
class PageDeployment {
    /**
     * Constructs a new <code>PageDeployment</code>.
     * The GitHub Pages deployment status.
     * @alias module:model/PageDeployment
     * @param id {module:model/PageDeploymentId} 
     * @param statusUrl {String} The URI to monitor GitHub Pages deployment status.
     * @param pageUrl {String} The URI to the deployed GitHub Pages.
     */
    constructor(id, statusUrl, pageUrl) { 
        
        PageDeployment.initialize(this, id, statusUrl, pageUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, statusUrl, pageUrl) { 
        obj['id'] = id;
        obj['status_url'] = statusUrl;
        obj['page_url'] = pageUrl;
    }

    /**
     * Constructs a <code>PageDeployment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PageDeployment} obj Optional instance to populate.
     * @return {module:model/PageDeployment} The populated <code>PageDeployment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PageDeployment();

            if (data.hasOwnProperty('id')) {
                obj['id'] = PageDeploymentId.constructFromObject(data['id']);
            }
            if (data.hasOwnProperty('status_url')) {
                obj['status_url'] = ApiClient.convertToType(data['status_url'], 'String');
            }
            if (data.hasOwnProperty('page_url')) {
                obj['page_url'] = ApiClient.convertToType(data['page_url'], 'String');
            }
            if (data.hasOwnProperty('preview_url')) {
                obj['preview_url'] = ApiClient.convertToType(data['preview_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PageDeployment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PageDeployment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PageDeployment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `id`
        if (data['id']) { // data not null
          PageDeploymentId.validateJSON(data['id']);
        }
        // ensure the json data is a string
        if (data['status_url'] && !(typeof data['status_url'] === 'string' || data['status_url'] instanceof String)) {
            throw new Error("Expected the field `status_url` to be a primitive type in the JSON string but got " + data['status_url']);
        }
        // ensure the json data is a string
        if (data['page_url'] && !(typeof data['page_url'] === 'string' || data['page_url'] instanceof String)) {
            throw new Error("Expected the field `page_url` to be a primitive type in the JSON string but got " + data['page_url']);
        }
        // ensure the json data is a string
        if (data['preview_url'] && !(typeof data['preview_url'] === 'string' || data['preview_url'] instanceof String)) {
            throw new Error("Expected the field `preview_url` to be a primitive type in the JSON string but got " + data['preview_url']);
        }

        return true;
    }


}

PageDeployment.RequiredProperties = ["id", "status_url", "page_url"];

/**
 * @member {module:model/PageDeploymentId} id
 */
PageDeployment.prototype['id'] = undefined;

/**
 * The URI to monitor GitHub Pages deployment status.
 * @member {String} status_url
 */
PageDeployment.prototype['status_url'] = undefined;

/**
 * The URI to the deployed GitHub Pages.
 * @member {String} page_url
 */
PageDeployment.prototype['page_url'] = undefined;

/**
 * The URI to the deployed GitHub Pages preview.
 * @member {String} preview_url
 */
PageDeployment.prototype['preview_url'] = undefined;






export default PageDeployment;

