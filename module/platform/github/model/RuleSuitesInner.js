/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuleSuitesInner model module.
 * @module model/RuleSuitesInner
 * @version 1.1.4
 */
class RuleSuitesInner {
    /**
     * Constructs a new <code>RuleSuitesInner</code>.
     * @alias module:model/RuleSuitesInner
     */
    constructor() { 
        
        RuleSuitesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuleSuitesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleSuitesInner} obj Optional instance to populate.
     * @return {module:model/RuleSuitesInner} The populated <code>RuleSuitesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleSuitesInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('actor_id')) {
                obj['actor_id'] = ApiClient.convertToType(data['actor_id'], 'Number');
            }
            if (data.hasOwnProperty('actor_name')) {
                obj['actor_name'] = ApiClient.convertToType(data['actor_name'], 'String');
            }
            if (data.hasOwnProperty('before_sha')) {
                obj['before_sha'] = ApiClient.convertToType(data['before_sha'], 'String');
            }
            if (data.hasOwnProperty('after_sha')) {
                obj['after_sha'] = ApiClient.convertToType(data['after_sha'], 'String');
            }
            if (data.hasOwnProperty('ref')) {
                obj['ref'] = ApiClient.convertToType(data['ref'], 'String');
            }
            if (data.hasOwnProperty('repository_id')) {
                obj['repository_id'] = ApiClient.convertToType(data['repository_id'], 'Number');
            }
            if (data.hasOwnProperty('repository_name')) {
                obj['repository_name'] = ApiClient.convertToType(data['repository_name'], 'String');
            }
            if (data.hasOwnProperty('pushed_at')) {
                obj['pushed_at'] = ApiClient.convertToType(data['pushed_at'], 'Date');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
            if (data.hasOwnProperty('evaluation_result')) {
                obj['evaluation_result'] = ApiClient.convertToType(data['evaluation_result'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuleSuitesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuleSuitesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['actor_name'] && !(typeof data['actor_name'] === 'string' || data['actor_name'] instanceof String)) {
            throw new Error("Expected the field `actor_name` to be a primitive type in the JSON string but got " + data['actor_name']);
        }
        // ensure the json data is a string
        if (data['before_sha'] && !(typeof data['before_sha'] === 'string' || data['before_sha'] instanceof String)) {
            throw new Error("Expected the field `before_sha` to be a primitive type in the JSON string but got " + data['before_sha']);
        }
        // ensure the json data is a string
        if (data['after_sha'] && !(typeof data['after_sha'] === 'string' || data['after_sha'] instanceof String)) {
            throw new Error("Expected the field `after_sha` to be a primitive type in the JSON string but got " + data['after_sha']);
        }
        // ensure the json data is a string
        if (data['ref'] && !(typeof data['ref'] === 'string' || data['ref'] instanceof String)) {
            throw new Error("Expected the field `ref` to be a primitive type in the JSON string but got " + data['ref']);
        }
        // ensure the json data is a string
        if (data['repository_name'] && !(typeof data['repository_name'] === 'string' || data['repository_name'] instanceof String)) {
            throw new Error("Expected the field `repository_name` to be a primitive type in the JSON string but got " + data['repository_name']);
        }
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }
        // ensure the json data is a string
        if (data['evaluation_result'] && !(typeof data['evaluation_result'] === 'string' || data['evaluation_result'] instanceof String)) {
            throw new Error("Expected the field `evaluation_result` to be a primitive type in the JSON string but got " + data['evaluation_result']);
        }

        return true;
    }


}



/**
 * The unique identifier of the rule insight.
 * @member {Number} id
 */
RuleSuitesInner.prototype['id'] = undefined;

/**
 * The number that identifies the user.
 * @member {Number} actor_id
 */
RuleSuitesInner.prototype['actor_id'] = undefined;

/**
 * The handle for the GitHub user account.
 * @member {String} actor_name
 */
RuleSuitesInner.prototype['actor_name'] = undefined;

/**
 * The first commit sha before the push evaluation.
 * @member {String} before_sha
 */
RuleSuitesInner.prototype['before_sha'] = undefined;

/**
 * The last commit sha in the push evaluation.
 * @member {String} after_sha
 */
RuleSuitesInner.prototype['after_sha'] = undefined;

/**
 * The ref name that the evaluation ran on.
 * @member {String} ref
 */
RuleSuitesInner.prototype['ref'] = undefined;

/**
 * The ID of the repository associated with the rule evaluation.
 * @member {Number} repository_id
 */
RuleSuitesInner.prototype['repository_id'] = undefined;

/**
 * The name of the repository without the `.git` extension.
 * @member {String} repository_name
 */
RuleSuitesInner.prototype['repository_name'] = undefined;

/**
 * @member {Date} pushed_at
 */
RuleSuitesInner.prototype['pushed_at'] = undefined;

/**
 * The result of the rule evaluations for rules with the `active` enforcement status.
 * @member {module:model/RuleSuitesInner.ResultEnum} result
 */
RuleSuitesInner.prototype['result'] = undefined;

/**
 * The result of the rule evaluations for rules with the `active` and `evaluate` enforcement statuses, demonstrating whether rules would pass or fail if all rules in the rule suite were `active`.
 * @member {module:model/RuleSuitesInner.EvaluationResultEnum} evaluation_result
 */
RuleSuitesInner.prototype['evaluation_result'] = undefined;





/**
 * Allowed values for the <code>result</code> property.
 * @enum {String}
 * @readonly
 */
RuleSuitesInner['ResultEnum'] = {

    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",

    /**
     * value: "fail"
     * @const
     */
    "fail": "fail",

    /**
     * value: "bypass"
     * @const
     */
    "bypass": "bypass"
};


/**
 * Allowed values for the <code>evaluation_result</code> property.
 * @enum {String}
 * @readonly
 */
RuleSuitesInner['EvaluationResultEnum'] = {

    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",

    /**
     * value: "fail"
     * @const
     */
    "fail": "fail"
};



export default RuleSuitesInner;

