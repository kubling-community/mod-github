/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NullableCodeOfConductSimple from './NullableCodeOfConductSimple';
import NullableCommunityHealthFile from './NullableCommunityHealthFile';
import NullableLicenseSimple from './NullableLicenseSimple';

/**
 * The CommunityProfileFiles model module.
 * @module model/CommunityProfileFiles
 * @version 1.1.4
 */
class CommunityProfileFiles {
    /**
     * Constructs a new <code>CommunityProfileFiles</code>.
     * @alias module:model/CommunityProfileFiles
     * @param codeOfConduct {module:model/NullableCodeOfConductSimple} 
     * @param codeOfConductFile {module:model/NullableCommunityHealthFile} 
     * @param license {module:model/NullableLicenseSimple} 
     * @param contributing {module:model/NullableCommunityHealthFile} 
     * @param readme {module:model/NullableCommunityHealthFile} 
     * @param issueTemplate {module:model/NullableCommunityHealthFile} 
     * @param pullRequestTemplate {module:model/NullableCommunityHealthFile} 
     */
    constructor(codeOfConduct, codeOfConductFile, license, contributing, readme, issueTemplate, pullRequestTemplate) { 
        
        CommunityProfileFiles.initialize(this, codeOfConduct, codeOfConductFile, license, contributing, readme, issueTemplate, pullRequestTemplate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, codeOfConduct, codeOfConductFile, license, contributing, readme, issueTemplate, pullRequestTemplate) { 
        obj['code_of_conduct'] = codeOfConduct;
        obj['code_of_conduct_file'] = codeOfConductFile;
        obj['license'] = license;
        obj['contributing'] = contributing;
        obj['readme'] = readme;
        obj['issue_template'] = issueTemplate;
        obj['pull_request_template'] = pullRequestTemplate;
    }

    /**
     * Constructs a <code>CommunityProfileFiles</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommunityProfileFiles} obj Optional instance to populate.
     * @return {module:model/CommunityProfileFiles} The populated <code>CommunityProfileFiles</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommunityProfileFiles();

            if (data.hasOwnProperty('code_of_conduct')) {
                obj['code_of_conduct'] = NullableCodeOfConductSimple.constructFromObject(data['code_of_conduct']);
            }
            if (data.hasOwnProperty('code_of_conduct_file')) {
                obj['code_of_conduct_file'] = NullableCommunityHealthFile.constructFromObject(data['code_of_conduct_file']);
            }
            if (data.hasOwnProperty('license')) {
                obj['license'] = NullableLicenseSimple.constructFromObject(data['license']);
            }
            if (data.hasOwnProperty('contributing')) {
                obj['contributing'] = NullableCommunityHealthFile.constructFromObject(data['contributing']);
            }
            if (data.hasOwnProperty('readme')) {
                obj['readme'] = NullableCommunityHealthFile.constructFromObject(data['readme']);
            }
            if (data.hasOwnProperty('issue_template')) {
                obj['issue_template'] = NullableCommunityHealthFile.constructFromObject(data['issue_template']);
            }
            if (data.hasOwnProperty('pull_request_template')) {
                obj['pull_request_template'] = NullableCommunityHealthFile.constructFromObject(data['pull_request_template']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommunityProfileFiles</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommunityProfileFiles</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CommunityProfileFiles.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `code_of_conduct`
        if (data['code_of_conduct']) { // data not null
          NullableCodeOfConductSimple.validateJSON(data['code_of_conduct']);
        }
        // validate the optional field `code_of_conduct_file`
        if (data['code_of_conduct_file']) { // data not null
          NullableCommunityHealthFile.validateJSON(data['code_of_conduct_file']);
        }
        // validate the optional field `license`
        if (data['license']) { // data not null
          NullableLicenseSimple.validateJSON(data['license']);
        }
        // validate the optional field `contributing`
        if (data['contributing']) { // data not null
          NullableCommunityHealthFile.validateJSON(data['contributing']);
        }
        // validate the optional field `readme`
        if (data['readme']) { // data not null
          NullableCommunityHealthFile.validateJSON(data['readme']);
        }
        // validate the optional field `issue_template`
        if (data['issue_template']) { // data not null
          NullableCommunityHealthFile.validateJSON(data['issue_template']);
        }
        // validate the optional field `pull_request_template`
        if (data['pull_request_template']) { // data not null
          NullableCommunityHealthFile.validateJSON(data['pull_request_template']);
        }

        return true;
    }


}

CommunityProfileFiles.RequiredProperties = ["code_of_conduct", "code_of_conduct_file", "license", "contributing", "readme", "issue_template", "pull_request_template"];

/**
 * @member {module:model/NullableCodeOfConductSimple} code_of_conduct
 */
CommunityProfileFiles.prototype['code_of_conduct'] = undefined;

/**
 * @member {module:model/NullableCommunityHealthFile} code_of_conduct_file
 */
CommunityProfileFiles.prototype['code_of_conduct_file'] = undefined;

/**
 * @member {module:model/NullableLicenseSimple} license
 */
CommunityProfileFiles.prototype['license'] = undefined;

/**
 * @member {module:model/NullableCommunityHealthFile} contributing
 */
CommunityProfileFiles.prototype['contributing'] = undefined;

/**
 * @member {module:model/NullableCommunityHealthFile} readme
 */
CommunityProfileFiles.prototype['readme'] = undefined;

/**
 * @member {module:model/NullableCommunityHealthFile} issue_template
 */
CommunityProfileFiles.prototype['issue_template'] = undefined;

/**
 * @member {module:model/NullableCommunityHealthFile} pull_request_template
 */
CommunityProfileFiles.prototype['pull_request_template'] = undefined;






export default CommunityProfileFiles;

