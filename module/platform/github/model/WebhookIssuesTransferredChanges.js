/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Issue9 from './Issue9';
import Repository2 from './Repository2';

/**
 * The WebhookIssuesTransferredChanges model module.
 * @module model/WebhookIssuesTransferredChanges
 * @version 1.1.4
 */
class WebhookIssuesTransferredChanges {
    /**
     * Constructs a new <code>WebhookIssuesTransferredChanges</code>.
     * @alias module:model/WebhookIssuesTransferredChanges
     * @param newIssue {module:model/Issue9} 
     * @param newRepository {module:model/Repository2} 
     */
    constructor(newIssue, newRepository) { 
        
        WebhookIssuesTransferredChanges.initialize(this, newIssue, newRepository);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, newIssue, newRepository) { 
        obj['new_issue'] = newIssue;
        obj['new_repository'] = newRepository;
    }

    /**
     * Constructs a <code>WebhookIssuesTransferredChanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookIssuesTransferredChanges} obj Optional instance to populate.
     * @return {module:model/WebhookIssuesTransferredChanges} The populated <code>WebhookIssuesTransferredChanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookIssuesTransferredChanges();

            if (data.hasOwnProperty('new_issue')) {
                obj['new_issue'] = Issue9.constructFromObject(data['new_issue']);
            }
            if (data.hasOwnProperty('new_repository')) {
                obj['new_repository'] = Repository2.constructFromObject(data['new_repository']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookIssuesTransferredChanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookIssuesTransferredChanges</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookIssuesTransferredChanges.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `new_issue`
        if (data['new_issue']) { // data not null
          Issue9.validateJSON(data['new_issue']);
        }
        // validate the optional field `new_repository`
        if (data['new_repository']) { // data not null
          Repository2.validateJSON(data['new_repository']);
        }

        return true;
    }


}

WebhookIssuesTransferredChanges.RequiredProperties = ["new_issue", "new_repository"];

/**
 * @member {module:model/Issue9} new_issue
 */
WebhookIssuesTransferredChanges.prototype['new_issue'] = undefined;

/**
 * @member {module:model/Repository2} new_repository
 */
WebhookIssuesTransferredChanges.prototype['new_repository'] = undefined;






export default WebhookIssuesTransferredChanges;

