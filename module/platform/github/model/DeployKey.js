/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeployKey model module.
 * @module model/DeployKey
 * @version 1.1.4
 */
class DeployKey {
    /**
     * Constructs a new <code>DeployKey</code>.
     * An SSH key granting access to a single repository.
     * @alias module:model/DeployKey
     * @param id {Number} 
     * @param key {String} 
     * @param url {String} 
     * @param title {String} 
     * @param verified {Boolean} 
     * @param createdAt {String} 
     * @param readOnly {Boolean} 
     */
    constructor(id, key, url, title, verified, createdAt, readOnly) { 
        
        DeployKey.initialize(this, id, key, url, title, verified, createdAt, readOnly);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, key, url, title, verified, createdAt, readOnly) { 
        obj['id'] = id;
        obj['key'] = key;
        obj['url'] = url;
        obj['title'] = title;
        obj['verified'] = verified;
        obj['created_at'] = createdAt;
        obj['read_only'] = readOnly;
    }

    /**
     * Constructs a <code>DeployKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeployKey} obj Optional instance to populate.
     * @return {module:model/DeployKey} The populated <code>DeployKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeployKey();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('verified')) {
                obj['verified'] = ApiClient.convertToType(data['verified'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('read_only')) {
                obj['read_only'] = ApiClient.convertToType(data['read_only'], 'Boolean');
            }
            if (data.hasOwnProperty('added_by')) {
                obj['added_by'] = ApiClient.convertToType(data['added_by'], 'String');
            }
            if (data.hasOwnProperty('last_used')) {
                obj['last_used'] = ApiClient.convertToType(data['last_used'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeployKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeployKey</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeployKey.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['added_by'] && !(typeof data['added_by'] === 'string' || data['added_by'] instanceof String)) {
            throw new Error("Expected the field `added_by` to be a primitive type in the JSON string but got " + data['added_by']);
        }
        // ensure the json data is a string
        if (data['last_used'] && !(typeof data['last_used'] === 'string' || data['last_used'] instanceof String)) {
            throw new Error("Expected the field `last_used` to be a primitive type in the JSON string but got " + data['last_used']);
        }

        return true;
    }


}

DeployKey.RequiredProperties = ["id", "key", "url", "title", "verified", "created_at", "read_only"];

/**
 * @member {Number} id
 */
DeployKey.prototype['id'] = undefined;

/**
 * @member {String} key
 */
DeployKey.prototype['key'] = undefined;

/**
 * @member {String} url
 */
DeployKey.prototype['url'] = undefined;

/**
 * @member {String} title
 */
DeployKey.prototype['title'] = undefined;

/**
 * @member {Boolean} verified
 */
DeployKey.prototype['verified'] = undefined;

/**
 * @member {String} created_at
 */
DeployKey.prototype['created_at'] = undefined;

/**
 * @member {Boolean} read_only
 */
DeployKey.prototype['read_only'] = undefined;

/**
 * @member {String} added_by
 */
DeployKey.prototype['added_by'] = undefined;

/**
 * @member {String} last_used
 */
DeployKey.prototype['last_used'] = undefined;






export default DeployKey;

