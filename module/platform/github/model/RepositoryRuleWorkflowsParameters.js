/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RepositoryRuleParamsWorkflowFileReference from './RepositoryRuleParamsWorkflowFileReference';

/**
 * The RepositoryRuleWorkflowsParameters model module.
 * @module model/RepositoryRuleWorkflowsParameters
 * @version 1.1.4
 */
class RepositoryRuleWorkflowsParameters {
    /**
     * Constructs a new <code>RepositoryRuleWorkflowsParameters</code>.
     * @alias module:model/RepositoryRuleWorkflowsParameters
     * @param workflows {Array.<module:model/RepositoryRuleParamsWorkflowFileReference>} Workflows that must pass for this rule to pass.
     */
    constructor(workflows) { 
        
        RepositoryRuleWorkflowsParameters.initialize(this, workflows);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workflows) { 
        obj['workflows'] = workflows;
    }

    /**
     * Constructs a <code>RepositoryRuleWorkflowsParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepositoryRuleWorkflowsParameters} obj Optional instance to populate.
     * @return {module:model/RepositoryRuleWorkflowsParameters} The populated <code>RepositoryRuleWorkflowsParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepositoryRuleWorkflowsParameters();

            if (data.hasOwnProperty('workflows')) {
                obj['workflows'] = ApiClient.convertToType(data['workflows'], [RepositoryRuleParamsWorkflowFileReference]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepositoryRuleWorkflowsParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepositoryRuleWorkflowsParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RepositoryRuleWorkflowsParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['workflows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['workflows'])) {
                throw new Error("Expected the field `workflows` to be an array in the JSON data but got " + data['workflows']);
            }
            // validate the optional field `workflows` (array)
            for (const item of data['workflows']) {
                RepositoryRuleParamsWorkflowFileReference.validateJSON(item);
            };
        }

        return true;
    }


}

RepositoryRuleWorkflowsParameters.RequiredProperties = ["workflows"];

/**
 * Workflows that must pass for this rule to pass.
 * @member {Array.<module:model/RepositoryRuleParamsWorkflowFileReference>} workflows
 */
RepositoryRuleWorkflowsParameters.prototype['workflows'] = undefined;






export default RepositoryRuleWorkflowsParameters;

