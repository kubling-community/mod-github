/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PullRequestReviewComment1 from './PullRequestReviewComment1';

/**
 * The WebhookPullRequestReviewThreadResolvedThread model module.
 * @module model/WebhookPullRequestReviewThreadResolvedThread
 * @version 1.1.4
 */
class WebhookPullRequestReviewThreadResolvedThread {
    /**
     * Constructs a new <code>WebhookPullRequestReviewThreadResolvedThread</code>.
     * @alias module:model/WebhookPullRequestReviewThreadResolvedThread
     * @param comments {Array.<module:model/PullRequestReviewComment1>} 
     * @param nodeId {String} 
     */
    constructor(comments, nodeId) { 
        
        WebhookPullRequestReviewThreadResolvedThread.initialize(this, comments, nodeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, comments, nodeId) { 
        obj['comments'] = comments;
        obj['node_id'] = nodeId;
    }

    /**
     * Constructs a <code>WebhookPullRequestReviewThreadResolvedThread</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookPullRequestReviewThreadResolvedThread} obj Optional instance to populate.
     * @return {module:model/WebhookPullRequestReviewThreadResolvedThread} The populated <code>WebhookPullRequestReviewThreadResolvedThread</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookPullRequestReviewThreadResolvedThread();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [PullRequestReviewComment1]);
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookPullRequestReviewThreadResolvedThread</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookPullRequestReviewThreadResolvedThread</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookPullRequestReviewThreadResolvedThread.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['comments'])) {
                throw new Error("Expected the field `comments` to be an array in the JSON data but got " + data['comments']);
            }
            // validate the optional field `comments` (array)
            for (const item of data['comments']) {
                PullRequestReviewComment1.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }

        return true;
    }


}

WebhookPullRequestReviewThreadResolvedThread.RequiredProperties = ["comments", "node_id"];

/**
 * @member {Array.<module:model/PullRequestReviewComment1>} comments
 */
WebhookPullRequestReviewThreadResolvedThread.prototype['comments'] = undefined;

/**
 * @member {String} node_id
 */
WebhookPullRequestReviewThreadResolvedThread.prototype['node_id'] = undefined;






export default WebhookPullRequestReviewThreadResolvedThread;

