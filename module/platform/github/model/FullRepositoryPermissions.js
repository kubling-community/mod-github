/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FullRepositoryPermissions model module.
 * @module model/FullRepositoryPermissions
 * @version 1.1.4
 */
class FullRepositoryPermissions {
    /**
     * Constructs a new <code>FullRepositoryPermissions</code>.
     * @alias module:model/FullRepositoryPermissions
     * @param admin {Boolean} 
     * @param push {Boolean} 
     * @param pull {Boolean} 
     */
    constructor(admin, push, pull) { 
        
        FullRepositoryPermissions.initialize(this, admin, push, pull);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, admin, push, pull) { 
        obj['admin'] = admin;
        obj['push'] = push;
        obj['pull'] = pull;
    }

    /**
     * Constructs a <code>FullRepositoryPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FullRepositoryPermissions} obj Optional instance to populate.
     * @return {module:model/FullRepositoryPermissions} The populated <code>FullRepositoryPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FullRepositoryPermissions();

            if (data.hasOwnProperty('admin')) {
                obj['admin'] = ApiClient.convertToType(data['admin'], 'Boolean');
            }
            if (data.hasOwnProperty('maintain')) {
                obj['maintain'] = ApiClient.convertToType(data['maintain'], 'Boolean');
            }
            if (data.hasOwnProperty('push')) {
                obj['push'] = ApiClient.convertToType(data['push'], 'Boolean');
            }
            if (data.hasOwnProperty('triage')) {
                obj['triage'] = ApiClient.convertToType(data['triage'], 'Boolean');
            }
            if (data.hasOwnProperty('pull')) {
                obj['pull'] = ApiClient.convertToType(data['pull'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FullRepositoryPermissions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FullRepositoryPermissions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FullRepositoryPermissions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

FullRepositoryPermissions.RequiredProperties = ["admin", "push", "pull"];

/**
 * @member {Boolean} admin
 */
FullRepositoryPermissions.prototype['admin'] = undefined;

/**
 * @member {Boolean} maintain
 */
FullRepositoryPermissions.prototype['maintain'] = undefined;

/**
 * @member {Boolean} push
 */
FullRepositoryPermissions.prototype['push'] = undefined;

/**
 * @member {Boolean} triage
 */
FullRepositoryPermissions.prototype['triage'] = undefined;

/**
 * @member {Boolean} pull
 */
FullRepositoryPermissions.prototype['pull'] = undefined;






export default FullRepositoryPermissions;

