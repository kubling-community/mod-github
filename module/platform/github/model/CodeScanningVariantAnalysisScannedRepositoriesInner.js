/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodeScanningVariantAnalysisRepository from './CodeScanningVariantAnalysisRepository';
import CodeScanningVariantAnalysisStatus from './CodeScanningVariantAnalysisStatus';

/**
 * The CodeScanningVariantAnalysisScannedRepositoriesInner model module.
 * @module model/CodeScanningVariantAnalysisScannedRepositoriesInner
 * @version 1.1.4
 */
class CodeScanningVariantAnalysisScannedRepositoriesInner {
    /**
     * Constructs a new <code>CodeScanningVariantAnalysisScannedRepositoriesInner</code>.
     * @alias module:model/CodeScanningVariantAnalysisScannedRepositoriesInner
     * @param repository {module:model/CodeScanningVariantAnalysisRepository} 
     * @param analysisStatus {module:model/CodeScanningVariantAnalysisStatus} 
     */
    constructor(repository, analysisStatus) { 
        
        CodeScanningVariantAnalysisScannedRepositoriesInner.initialize(this, repository, analysisStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, repository, analysisStatus) { 
        obj['repository'] = repository;
        obj['analysis_status'] = analysisStatus;
    }

    /**
     * Constructs a <code>CodeScanningVariantAnalysisScannedRepositoriesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodeScanningVariantAnalysisScannedRepositoriesInner} obj Optional instance to populate.
     * @return {module:model/CodeScanningVariantAnalysisScannedRepositoriesInner} The populated <code>CodeScanningVariantAnalysisScannedRepositoriesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CodeScanningVariantAnalysisScannedRepositoriesInner();

            if (data.hasOwnProperty('repository')) {
                obj['repository'] = CodeScanningVariantAnalysisRepository.constructFromObject(data['repository']);
            }
            if (data.hasOwnProperty('analysis_status')) {
                obj['analysis_status'] = CodeScanningVariantAnalysisStatus.constructFromObject(data['analysis_status']);
            }
            if (data.hasOwnProperty('result_count')) {
                obj['result_count'] = ApiClient.convertToType(data['result_count'], 'Number');
            }
            if (data.hasOwnProperty('artifact_size_in_bytes')) {
                obj['artifact_size_in_bytes'] = ApiClient.convertToType(data['artifact_size_in_bytes'], 'Number');
            }
            if (data.hasOwnProperty('failure_message')) {
                obj['failure_message'] = ApiClient.convertToType(data['failure_message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CodeScanningVariantAnalysisScannedRepositoriesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CodeScanningVariantAnalysisScannedRepositoriesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CodeScanningVariantAnalysisScannedRepositoriesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `repository`
        if (data['repository']) { // data not null
          CodeScanningVariantAnalysisRepository.validateJSON(data['repository']);
        }
        // ensure the json data is a string
        if (data['failure_message'] && !(typeof data['failure_message'] === 'string' || data['failure_message'] instanceof String)) {
            throw new Error("Expected the field `failure_message` to be a primitive type in the JSON string but got " + data['failure_message']);
        }

        return true;
    }


}

CodeScanningVariantAnalysisScannedRepositoriesInner.RequiredProperties = ["repository", "analysis_status"];

/**
 * @member {module:model/CodeScanningVariantAnalysisRepository} repository
 */
CodeScanningVariantAnalysisScannedRepositoriesInner.prototype['repository'] = undefined;

/**
 * @member {module:model/CodeScanningVariantAnalysisStatus} analysis_status
 */
CodeScanningVariantAnalysisScannedRepositoriesInner.prototype['analysis_status'] = undefined;

/**
 * The number of results in the case of a successful analysis. This is only available for successful analyses.
 * @member {Number} result_count
 */
CodeScanningVariantAnalysisScannedRepositoriesInner.prototype['result_count'] = undefined;

/**
 * The size of the artifact. This is only available for successful analyses.
 * @member {Number} artifact_size_in_bytes
 */
CodeScanningVariantAnalysisScannedRepositoriesInner.prototype['artifact_size_in_bytes'] = undefined;

/**
 * The reason of the failure of this repo task. This is only available if the repository task has failed.
 * @member {String} failure_message
 */
CodeScanningVariantAnalysisScannedRepositoriesInner.prototype['failure_message'] = undefined;






export default CodeScanningVariantAnalysisScannedRepositoriesInner;

