/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommunityProfileFiles from './CommunityProfileFiles';

/**
 * The CommunityProfile model module.
 * @module model/CommunityProfile
 * @version 1.1.4
 */
class CommunityProfile {
    /**
     * Constructs a new <code>CommunityProfile</code>.
     * Community Profile
     * @alias module:model/CommunityProfile
     * @param healthPercentage {Number} 
     * @param description {String} 
     * @param documentation {String} 
     * @param files {module:model/CommunityProfileFiles} 
     * @param updatedAt {Date} 
     */
    constructor(healthPercentage, description, documentation, files, updatedAt) { 
        
        CommunityProfile.initialize(this, healthPercentage, description, documentation, files, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, healthPercentage, description, documentation, files, updatedAt) { 
        obj['health_percentage'] = healthPercentage;
        obj['description'] = description;
        obj['documentation'] = documentation;
        obj['files'] = files;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>CommunityProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommunityProfile} obj Optional instance to populate.
     * @return {module:model/CommunityProfile} The populated <code>CommunityProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommunityProfile();

            if (data.hasOwnProperty('health_percentage')) {
                obj['health_percentage'] = ApiClient.convertToType(data['health_percentage'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('documentation')) {
                obj['documentation'] = ApiClient.convertToType(data['documentation'], 'String');
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = CommunityProfileFiles.constructFromObject(data['files']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('content_reports_enabled')) {
                obj['content_reports_enabled'] = ApiClient.convertToType(data['content_reports_enabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CommunityProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CommunityProfile</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CommunityProfile.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['documentation'] && !(typeof data['documentation'] === 'string' || data['documentation'] instanceof String)) {
            throw new Error("Expected the field `documentation` to be a primitive type in the JSON string but got " + data['documentation']);
        }
        // validate the optional field `files`
        if (data['files']) { // data not null
          CommunityProfileFiles.validateJSON(data['files']);
        }

        return true;
    }


}

CommunityProfile.RequiredProperties = ["health_percentage", "description", "documentation", "files", "updated_at"];

/**
 * @member {Number} health_percentage
 */
CommunityProfile.prototype['health_percentage'] = undefined;

/**
 * @member {String} description
 */
CommunityProfile.prototype['description'] = undefined;

/**
 * @member {String} documentation
 */
CommunityProfile.prototype['documentation'] = undefined;

/**
 * @member {module:model/CommunityProfileFiles} files
 */
CommunityProfile.prototype['files'] = undefined;

/**
 * @member {Date} updated_at
 */
CommunityProfile.prototype['updated_at'] = undefined;

/**
 * @member {Boolean} content_reports_enabled
 */
CommunityProfile.prototype['content_reports_enabled'] = undefined;






export default CommunityProfile;

