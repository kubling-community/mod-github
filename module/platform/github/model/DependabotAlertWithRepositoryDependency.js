/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DependabotAlertPackage from './DependabotAlertPackage';

/**
 * The DependabotAlertWithRepositoryDependency model module.
 * @module model/DependabotAlertWithRepositoryDependency
 * @version 1.1.4
 */
class DependabotAlertWithRepositoryDependency {
    /**
     * Constructs a new <code>DependabotAlertWithRepositoryDependency</code>.
     * Details for the vulnerable dependency.
     * @alias module:model/DependabotAlertWithRepositoryDependency
     */
    constructor() { 
        
        DependabotAlertWithRepositoryDependency.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DependabotAlertWithRepositoryDependency</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DependabotAlertWithRepositoryDependency} obj Optional instance to populate.
     * @return {module:model/DependabotAlertWithRepositoryDependency} The populated <code>DependabotAlertWithRepositoryDependency</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DependabotAlertWithRepositoryDependency();

            if (data.hasOwnProperty('package')) {
                obj['package'] = DependabotAlertPackage.constructFromObject(data['package']);
            }
            if (data.hasOwnProperty('manifest_path')) {
                obj['manifest_path'] = ApiClient.convertToType(data['manifest_path'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DependabotAlertWithRepositoryDependency</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DependabotAlertWithRepositoryDependency</code>.
     */
    static validateJSON(data) {
        // validate the optional field `package`
        if (data['package']) { // data not null
          DependabotAlertPackage.validateJSON(data['package']);
        }
        // ensure the json data is a string
        if (data['manifest_path'] && !(typeof data['manifest_path'] === 'string' || data['manifest_path'] instanceof String)) {
            throw new Error("Expected the field `manifest_path` to be a primitive type in the JSON string but got " + data['manifest_path']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }

        return true;
    }


}



/**
 * @member {module:model/DependabotAlertPackage} package
 */
DependabotAlertWithRepositoryDependency.prototype['package'] = undefined;

/**
 * The full path to the dependency manifest file, relative to the root of the repository.
 * @member {String} manifest_path
 */
DependabotAlertWithRepositoryDependency.prototype['manifest_path'] = undefined;

/**
 * The execution scope of the vulnerable dependency.
 * @member {module:model/DependabotAlertWithRepositoryDependency.ScopeEnum} scope
 */
DependabotAlertWithRepositoryDependency.prototype['scope'] = undefined;





/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
DependabotAlertWithRepositoryDependency['ScopeEnum'] = {

    /**
     * value: "development"
     * @const
     */
    "development": "development",

    /**
     * value: "runtime"
     * @const
     */
    "runtime": "runtime"
};



export default DependabotAlertWithRepositoryDependency;

