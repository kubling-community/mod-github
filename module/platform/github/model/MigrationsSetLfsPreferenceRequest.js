/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MigrationsSetLfsPreferenceRequest model module.
 * @module model/MigrationsSetLfsPreferenceRequest
 * @version 1.1.4
 */
class MigrationsSetLfsPreferenceRequest {
    /**
     * Constructs a new <code>MigrationsSetLfsPreferenceRequest</code>.
     * @alias module:model/MigrationsSetLfsPreferenceRequest
     * @param useLfs {module:model/MigrationsSetLfsPreferenceRequest.UseLfsEnum} Whether to store large files during the import. `opt_in` means large files will be stored using Git LFS. `opt_out` means large files will be removed during the import.
     */
    constructor(useLfs) { 
        
        MigrationsSetLfsPreferenceRequest.initialize(this, useLfs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, useLfs) { 
        obj['use_lfs'] = useLfs;
    }

    /**
     * Constructs a <code>MigrationsSetLfsPreferenceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrationsSetLfsPreferenceRequest} obj Optional instance to populate.
     * @return {module:model/MigrationsSetLfsPreferenceRequest} The populated <code>MigrationsSetLfsPreferenceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrationsSetLfsPreferenceRequest();

            if (data.hasOwnProperty('use_lfs')) {
                obj['use_lfs'] = ApiClient.convertToType(data['use_lfs'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrationsSetLfsPreferenceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrationsSetLfsPreferenceRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MigrationsSetLfsPreferenceRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['use_lfs'] && !(typeof data['use_lfs'] === 'string' || data['use_lfs'] instanceof String)) {
            throw new Error("Expected the field `use_lfs` to be a primitive type in the JSON string but got " + data['use_lfs']);
        }

        return true;
    }


}

MigrationsSetLfsPreferenceRequest.RequiredProperties = ["use_lfs"];

/**
 * Whether to store large files during the import. `opt_in` means large files will be stored using Git LFS. `opt_out` means large files will be removed during the import.
 * @member {module:model/MigrationsSetLfsPreferenceRequest.UseLfsEnum} use_lfs
 */
MigrationsSetLfsPreferenceRequest.prototype['use_lfs'] = undefined;





/**
 * Allowed values for the <code>use_lfs</code> property.
 * @enum {String}
 * @readonly
 */
MigrationsSetLfsPreferenceRequest['UseLfsEnum'] = {

    /**
     * value: "opt_in"
     * @const
     */
    "in": "opt_in",

    /**
     * value: "opt_out"
     * @const
     */
    "out": "opt_out"
};



export default MigrationsSetLfsPreferenceRequest;

