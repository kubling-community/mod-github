/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodespacesCreateForAuthenticatedUserRequestOneOf from './CodespacesCreateForAuthenticatedUserRequestOneOf';
import CodespacesCreateForAuthenticatedUserRequestOneOf1 from './CodespacesCreateForAuthenticatedUserRequestOneOf1';
import CodespacesCreateForAuthenticatedUserRequestOneOf1PullRequest from './CodespacesCreateForAuthenticatedUserRequestOneOf1PullRequest';

/**
 * The CodespacesCreateForAuthenticatedUserRequest model module.
 * @module model/CodespacesCreateForAuthenticatedUserRequest
 * @version 1.1.4
 */
class CodespacesCreateForAuthenticatedUserRequest {
    /**
     * Constructs a new <code>CodespacesCreateForAuthenticatedUserRequest</code>.
     * @alias module:model/CodespacesCreateForAuthenticatedUserRequest
     * @param {(module:model/CodespacesCreateForAuthenticatedUserRequestOneOf|module:model/CodespacesCreateForAuthenticatedUserRequestOneOf1)} instance The actual instance to initialize CodespacesCreateForAuthenticatedUserRequest.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "CodespacesCreateForAuthenticatedUserRequestOneOf") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CodespacesCreateForAuthenticatedUserRequestOneOf.validateJSON(instance); // throw an exception if no match
                // create CodespacesCreateForAuthenticatedUserRequestOneOf from JS object
                this.actualInstance = CodespacesCreateForAuthenticatedUserRequestOneOf.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CodespacesCreateForAuthenticatedUserRequestOneOf
            errorMessages.push("Failed to construct CodespacesCreateForAuthenticatedUserRequestOneOf: " + err)
        }

        try {
            if (typeof instance === "CodespacesCreateForAuthenticatedUserRequestOneOf1") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CodespacesCreateForAuthenticatedUserRequestOneOf1.validateJSON(instance); // throw an exception if no match
                // create CodespacesCreateForAuthenticatedUserRequestOneOf1 from JS object
                this.actualInstance = CodespacesCreateForAuthenticatedUserRequestOneOf1.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CodespacesCreateForAuthenticatedUserRequestOneOf1
            errorMessages.push("Failed to construct CodespacesCreateForAuthenticatedUserRequestOneOf1: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CodespacesCreateForAuthenticatedUserRequest` with oneOf schemas CodespacesCreateForAuthenticatedUserRequestOneOf, CodespacesCreateForAuthenticatedUserRequestOneOf1. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CodespacesCreateForAuthenticatedUserRequest` with oneOf schemas CodespacesCreateForAuthenticatedUserRequestOneOf, CodespacesCreateForAuthenticatedUserRequestOneOf1. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CodespacesCreateForAuthenticatedUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CodespacesCreateForAuthenticatedUserRequest} obj Optional instance to populate.
     * @return {module:model/CodespacesCreateForAuthenticatedUserRequest} The populated <code>CodespacesCreateForAuthenticatedUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CodespacesCreateForAuthenticatedUserRequest(data);
    }

    /**
     * Gets the actual instance, which can be <code>CodespacesCreateForAuthenticatedUserRequestOneOf</code>, <code>CodespacesCreateForAuthenticatedUserRequestOneOf1</code>.
     * @return {(module:model/CodespacesCreateForAuthenticatedUserRequestOneOf|module:model/CodespacesCreateForAuthenticatedUserRequestOneOf1)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CodespacesCreateForAuthenticatedUserRequestOneOf</code>, <code>CodespacesCreateForAuthenticatedUserRequestOneOf1</code>.
     * @param {(module:model/CodespacesCreateForAuthenticatedUserRequestOneOf|module:model/CodespacesCreateForAuthenticatedUserRequestOneOf1)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CodespacesCreateForAuthenticatedUserRequest.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CodespacesCreateForAuthenticatedUserRequest from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CodespacesCreateForAuthenticatedUserRequest} An instance of CodespacesCreateForAuthenticatedUserRequest.
     */
    static fromJSON = function(json_string){
        return CodespacesCreateForAuthenticatedUserRequest.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Repository id for this codespace
 * @member {Number} repository_id
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['repository_id'] = undefined;

/**
 * Git ref (typically a branch name) for this codespace
 * @member {String} ref
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['ref'] = undefined;

/**
 * The requested location for a new codespace. Best efforts are made to respect this upon creation. Assigned by IP if not provided.
 * @member {String} location
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['location'] = undefined;

/**
 * The geographic area for this codespace. If not specified, the value is assigned by IP. This property replaces `location`, which is being deprecated.
 * @member {module:model/CodespacesCreateForAuthenticatedUserRequest.GeoEnum} geo
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['geo'] = undefined;

/**
 * IP for location auto-detection when proxying a request
 * @member {String} client_ip
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['client_ip'] = undefined;

/**
 * Machine type to use for this codespace
 * @member {String} machine
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['machine'] = undefined;

/**
 * Path to devcontainer.json config to use for this codespace
 * @member {String} devcontainer_path
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['devcontainer_path'] = undefined;

/**
 * Whether to authorize requested permissions from devcontainer.json
 * @member {Boolean} multi_repo_permissions_opt_out
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['multi_repo_permissions_opt_out'] = undefined;

/**
 * Working directory for this codespace
 * @member {String} working_directory
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['working_directory'] = undefined;

/**
 * Time in minutes before codespace stops from inactivity
 * @member {Number} idle_timeout_minutes
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['idle_timeout_minutes'] = undefined;

/**
 * Display name for this codespace
 * @member {String} display_name
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['display_name'] = undefined;

/**
 * Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).
 * @member {Number} retention_period_minutes
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['retention_period_minutes'] = undefined;

/**
 * @member {module:model/CodespacesCreateForAuthenticatedUserRequestOneOf1PullRequest} pull_request
 */
CodespacesCreateForAuthenticatedUserRequest.prototype['pull_request'] = undefined;


CodespacesCreateForAuthenticatedUserRequest.OneOf = ["CodespacesCreateForAuthenticatedUserRequestOneOf", "CodespacesCreateForAuthenticatedUserRequestOneOf1"];

export default CodespacesCreateForAuthenticatedUserRequest;

