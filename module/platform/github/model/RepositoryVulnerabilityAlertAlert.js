/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';

/**
 * The RepositoryVulnerabilityAlertAlert model module.
 * @module model/RepositoryVulnerabilityAlertAlert
 * @version 1.1.4
 */
class RepositoryVulnerabilityAlertAlert {
    /**
     * Constructs a new <code>RepositoryVulnerabilityAlertAlert</code>.
     * The security alert of the vulnerable dependency.
     * @alias module:model/RepositoryVulnerabilityAlertAlert
     * @param affectedPackageName {String} 
     * @param affectedRange {String} 
     * @param createdAt {String} 
     * @param dismissReason {String} 
     * @param dismissedAt {String} 
     * @param dismisser {module:model/User} 
     * @param externalIdentifier {String} 
     * @param externalReference {String} 
     * @param ghsaId {String} 
     * @param id {Number} 
     * @param nodeId {String} 
     * @param number {Number} 
     * @param severity {String} 
     * @param state {module:model/RepositoryVulnerabilityAlertAlert.StateEnum} 
     */
    constructor(affectedPackageName, affectedRange, createdAt, dismissReason, dismissedAt, dismisser, externalIdentifier, externalReference, ghsaId, id, nodeId, number, severity, state) { 
        
        RepositoryVulnerabilityAlertAlert.initialize(this, affectedPackageName, affectedRange, createdAt, dismissReason, dismissedAt, dismisser, externalIdentifier, externalReference, ghsaId, id, nodeId, number, severity, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, affectedPackageName, affectedRange, createdAt, dismissReason, dismissedAt, dismisser, externalIdentifier, externalReference, ghsaId, id, nodeId, number, severity, state) { 
        obj['affected_package_name'] = affectedPackageName;
        obj['affected_range'] = affectedRange;
        obj['created_at'] = createdAt;
        obj['dismiss_reason'] = dismissReason;
        obj['dismissed_at'] = dismissedAt;
        obj['dismisser'] = dismisser;
        obj['external_identifier'] = externalIdentifier;
        obj['external_reference'] = externalReference;
        obj['ghsa_id'] = ghsaId;
        obj['id'] = id;
        obj['node_id'] = nodeId;
        obj['number'] = number;
        obj['severity'] = severity;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>RepositoryVulnerabilityAlertAlert</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepositoryVulnerabilityAlertAlert} obj Optional instance to populate.
     * @return {module:model/RepositoryVulnerabilityAlertAlert} The populated <code>RepositoryVulnerabilityAlertAlert</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepositoryVulnerabilityAlertAlert();

            if (data.hasOwnProperty('affected_package_name')) {
                obj['affected_package_name'] = ApiClient.convertToType(data['affected_package_name'], 'String');
            }
            if (data.hasOwnProperty('affected_range')) {
                obj['affected_range'] = ApiClient.convertToType(data['affected_range'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('dismiss_comment')) {
                obj['dismiss_comment'] = ApiClient.convertToType(data['dismiss_comment'], 'String');
            }
            if (data.hasOwnProperty('dismiss_reason')) {
                obj['dismiss_reason'] = ApiClient.convertToType(data['dismiss_reason'], 'String');
            }
            if (data.hasOwnProperty('dismissed_at')) {
                obj['dismissed_at'] = ApiClient.convertToType(data['dismissed_at'], 'String');
            }
            if (data.hasOwnProperty('dismisser')) {
                obj['dismisser'] = User.constructFromObject(data['dismisser']);
            }
            if (data.hasOwnProperty('external_identifier')) {
                obj['external_identifier'] = ApiClient.convertToType(data['external_identifier'], 'String');
            }
            if (data.hasOwnProperty('external_reference')) {
                obj['external_reference'] = ApiClient.convertToType(data['external_reference'], 'String');
            }
            if (data.hasOwnProperty('fix_reason')) {
                obj['fix_reason'] = ApiClient.convertToType(data['fix_reason'], 'String');
            }
            if (data.hasOwnProperty('fixed_at')) {
                obj['fixed_at'] = ApiClient.convertToType(data['fixed_at'], 'Date');
            }
            if (data.hasOwnProperty('fixed_in')) {
                obj['fixed_in'] = ApiClient.convertToType(data['fixed_in'], 'String');
            }
            if (data.hasOwnProperty('ghsa_id')) {
                obj['ghsa_id'] = ApiClient.convertToType(data['ghsa_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepositoryVulnerabilityAlertAlert</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepositoryVulnerabilityAlertAlert</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RepositoryVulnerabilityAlertAlert.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['affected_package_name'] && !(typeof data['affected_package_name'] === 'string' || data['affected_package_name'] instanceof String)) {
            throw new Error("Expected the field `affected_package_name` to be a primitive type in the JSON string but got " + data['affected_package_name']);
        }
        // ensure the json data is a string
        if (data['affected_range'] && !(typeof data['affected_range'] === 'string' || data['affected_range'] instanceof String)) {
            throw new Error("Expected the field `affected_range` to be a primitive type in the JSON string but got " + data['affected_range']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['dismiss_comment'] && !(typeof data['dismiss_comment'] === 'string' || data['dismiss_comment'] instanceof String)) {
            throw new Error("Expected the field `dismiss_comment` to be a primitive type in the JSON string but got " + data['dismiss_comment']);
        }
        // ensure the json data is a string
        if (data['dismiss_reason'] && !(typeof data['dismiss_reason'] === 'string' || data['dismiss_reason'] instanceof String)) {
            throw new Error("Expected the field `dismiss_reason` to be a primitive type in the JSON string but got " + data['dismiss_reason']);
        }
        // ensure the json data is a string
        if (data['dismissed_at'] && !(typeof data['dismissed_at'] === 'string' || data['dismissed_at'] instanceof String)) {
            throw new Error("Expected the field `dismissed_at` to be a primitive type in the JSON string but got " + data['dismissed_at']);
        }
        // validate the optional field `dismisser`
        if (data['dismisser']) { // data not null
          User.validateJSON(data['dismisser']);
        }
        // ensure the json data is a string
        if (data['external_identifier'] && !(typeof data['external_identifier'] === 'string' || data['external_identifier'] instanceof String)) {
            throw new Error("Expected the field `external_identifier` to be a primitive type in the JSON string but got " + data['external_identifier']);
        }
        // ensure the json data is a string
        if (data['external_reference'] && !(typeof data['external_reference'] === 'string' || data['external_reference'] instanceof String)) {
            throw new Error("Expected the field `external_reference` to be a primitive type in the JSON string but got " + data['external_reference']);
        }
        // ensure the json data is a string
        if (data['fix_reason'] && !(typeof data['fix_reason'] === 'string' || data['fix_reason'] instanceof String)) {
            throw new Error("Expected the field `fix_reason` to be a primitive type in the JSON string but got " + data['fix_reason']);
        }
        // ensure the json data is a string
        if (data['fixed_in'] && !(typeof data['fixed_in'] === 'string' || data['fixed_in'] instanceof String)) {
            throw new Error("Expected the field `fixed_in` to be a primitive type in the JSON string but got " + data['fixed_in']);
        }
        // ensure the json data is a string
        if (data['ghsa_id'] && !(typeof data['ghsa_id'] === 'string' || data['ghsa_id'] instanceof String)) {
            throw new Error("Expected the field `ghsa_id` to be a primitive type in the JSON string but got " + data['ghsa_id']);
        }
        // ensure the json data is a string
        if (data['node_id'] && !(typeof data['node_id'] === 'string' || data['node_id'] instanceof String)) {
            throw new Error("Expected the field `node_id` to be a primitive type in the JSON string but got " + data['node_id']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

RepositoryVulnerabilityAlertAlert.RequiredProperties = ["affected_package_name", "affected_range", "created_at", "dismiss_reason", "dismissed_at", "dismisser", "external_identifier", "external_reference", "ghsa_id", "id", "node_id", "number", "severity", "state"];

/**
 * @member {String} affected_package_name
 */
RepositoryVulnerabilityAlertAlert.prototype['affected_package_name'] = undefined;

/**
 * @member {String} affected_range
 */
RepositoryVulnerabilityAlertAlert.prototype['affected_range'] = undefined;

/**
 * @member {String} created_at
 */
RepositoryVulnerabilityAlertAlert.prototype['created_at'] = undefined;

/**
 * @member {String} dismiss_comment
 */
RepositoryVulnerabilityAlertAlert.prototype['dismiss_comment'] = undefined;

/**
 * @member {String} dismiss_reason
 */
RepositoryVulnerabilityAlertAlert.prototype['dismiss_reason'] = undefined;

/**
 * @member {String} dismissed_at
 */
RepositoryVulnerabilityAlertAlert.prototype['dismissed_at'] = undefined;

/**
 * @member {module:model/User} dismisser
 */
RepositoryVulnerabilityAlertAlert.prototype['dismisser'] = undefined;

/**
 * @member {String} external_identifier
 */
RepositoryVulnerabilityAlertAlert.prototype['external_identifier'] = undefined;

/**
 * @member {String} external_reference
 */
RepositoryVulnerabilityAlertAlert.prototype['external_reference'] = undefined;

/**
 * @member {String} fix_reason
 */
RepositoryVulnerabilityAlertAlert.prototype['fix_reason'] = undefined;

/**
 * @member {Date} fixed_at
 */
RepositoryVulnerabilityAlertAlert.prototype['fixed_at'] = undefined;

/**
 * @member {String} fixed_in
 */
RepositoryVulnerabilityAlertAlert.prototype['fixed_in'] = undefined;

/**
 * @member {String} ghsa_id
 */
RepositoryVulnerabilityAlertAlert.prototype['ghsa_id'] = undefined;

/**
 * @member {Number} id
 */
RepositoryVulnerabilityAlertAlert.prototype['id'] = undefined;

/**
 * @member {String} node_id
 */
RepositoryVulnerabilityAlertAlert.prototype['node_id'] = undefined;

/**
 * @member {Number} number
 */
RepositoryVulnerabilityAlertAlert.prototype['number'] = undefined;

/**
 * @member {String} severity
 */
RepositoryVulnerabilityAlertAlert.prototype['severity'] = undefined;

/**
 * @member {module:model/RepositoryVulnerabilityAlertAlert.StateEnum} state
 */
RepositoryVulnerabilityAlertAlert.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
RepositoryVulnerabilityAlertAlert['StateEnum'] = {

    /**
     * value: "dismissed"
     * @const
     */
    "dismissed": "dismissed"
};



export default RepositoryVulnerabilityAlertAlert;

