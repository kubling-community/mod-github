/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuleSuiteRuleEvaluationsInnerRuleSource from './RuleSuiteRuleEvaluationsInnerRuleSource';

/**
 * The RuleSuiteRuleEvaluationsInner model module.
 * @module model/RuleSuiteRuleEvaluationsInner
 * @version 1.1.4
 */
class RuleSuiteRuleEvaluationsInner {
    /**
     * Constructs a new <code>RuleSuiteRuleEvaluationsInner</code>.
     * @alias module:model/RuleSuiteRuleEvaluationsInner
     */
    constructor() { 
        
        RuleSuiteRuleEvaluationsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuleSuiteRuleEvaluationsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleSuiteRuleEvaluationsInner} obj Optional instance to populate.
     * @return {module:model/RuleSuiteRuleEvaluationsInner} The populated <code>RuleSuiteRuleEvaluationsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleSuiteRuleEvaluationsInner();

            if (data.hasOwnProperty('rule_source')) {
                obj['rule_source'] = RuleSuiteRuleEvaluationsInnerRuleSource.constructFromObject(data['rule_source']);
            }
            if (data.hasOwnProperty('enforcement')) {
                obj['enforcement'] = ApiClient.convertToType(data['enforcement'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], 'String');
            }
            if (data.hasOwnProperty('rule_type')) {
                obj['rule_type'] = ApiClient.convertToType(data['rule_type'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuleSuiteRuleEvaluationsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuleSuiteRuleEvaluationsInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `rule_source`
        if (data['rule_source']) { // data not null
          RuleSuiteRuleEvaluationsInnerRuleSource.validateJSON(data['rule_source']);
        }
        // ensure the json data is a string
        if (data['enforcement'] && !(typeof data['enforcement'] === 'string' || data['enforcement'] instanceof String)) {
            throw new Error("Expected the field `enforcement` to be a primitive type in the JSON string but got " + data['enforcement']);
        }
        // ensure the json data is a string
        if (data['result'] && !(typeof data['result'] === 'string' || data['result'] instanceof String)) {
            throw new Error("Expected the field `result` to be a primitive type in the JSON string but got " + data['result']);
        }
        // ensure the json data is a string
        if (data['rule_type'] && !(typeof data['rule_type'] === 'string' || data['rule_type'] instanceof String)) {
            throw new Error("Expected the field `rule_type` to be a primitive type in the JSON string but got " + data['rule_type']);
        }
        // ensure the json data is a string
        if (data['details'] && !(typeof data['details'] === 'string' || data['details'] instanceof String)) {
            throw new Error("Expected the field `details` to be a primitive type in the JSON string but got " + data['details']);
        }

        return true;
    }


}



/**
 * @member {module:model/RuleSuiteRuleEvaluationsInnerRuleSource} rule_source
 */
RuleSuiteRuleEvaluationsInner.prototype['rule_source'] = undefined;

/**
 * The enforcement level of this rule source.
 * @member {module:model/RuleSuiteRuleEvaluationsInner.EnforcementEnum} enforcement
 */
RuleSuiteRuleEvaluationsInner.prototype['enforcement'] = undefined;

/**
 * The result of the evaluation of the individual rule.
 * @member {module:model/RuleSuiteRuleEvaluationsInner.ResultEnum} result
 */
RuleSuiteRuleEvaluationsInner.prototype['result'] = undefined;

/**
 * The type of rule.
 * @member {String} rule_type
 */
RuleSuiteRuleEvaluationsInner.prototype['rule_type'] = undefined;

/**
 * Any associated details with the rule evaluation.
 * @member {String} details
 */
RuleSuiteRuleEvaluationsInner.prototype['details'] = undefined;





/**
 * Allowed values for the <code>enforcement</code> property.
 * @enum {String}
 * @readonly
 */
RuleSuiteRuleEvaluationsInner['EnforcementEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "evaluate"
     * @const
     */
    "evaluate": "evaluate",

    /**
     * value: "deleted ruleset"
     * @const
     */
    "deleted ruleset": "deleted ruleset"
};


/**
 * Allowed values for the <code>result</code> property.
 * @enum {String}
 * @readonly
 */
RuleSuiteRuleEvaluationsInner['ResultEnum'] = {

    /**
     * value: "pass"
     * @const
     */
    "pass": "pass",

    /**
     * value: "fail"
     * @const
     */
    "fail": "fail"
};



export default RuleSuiteRuleEvaluationsInner;

