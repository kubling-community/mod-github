/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrgsCreateOrUpdateCustomPropertyRequestDefaultValue from './OrgsCreateOrUpdateCustomPropertyRequestDefaultValue';

/**
 * The OrgCustomProperty model module.
 * @module model/OrgCustomProperty
 * @version 1.1.4
 */
class OrgCustomProperty {
    /**
     * Constructs a new <code>OrgCustomProperty</code>.
     * Custom property defined on an organization
     * @alias module:model/OrgCustomProperty
     * @param propertyName {String} The name of the property
     * @param valueType {module:model/OrgCustomProperty.ValueTypeEnum} The type of the value for the property
     */
    constructor(propertyName, valueType) { 
        
        OrgCustomProperty.initialize(this, propertyName, valueType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, propertyName, valueType) { 
        obj['property_name'] = propertyName;
        obj['value_type'] = valueType;
    }

    /**
     * Constructs a <code>OrgCustomProperty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgCustomProperty} obj Optional instance to populate.
     * @return {module:model/OrgCustomProperty} The populated <code>OrgCustomProperty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgCustomProperty();

            if (data.hasOwnProperty('property_name')) {
                obj['property_name'] = ApiClient.convertToType(data['property_name'], 'String');
            }
            if (data.hasOwnProperty('value_type')) {
                obj['value_type'] = ApiClient.convertToType(data['value_type'], 'String');
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('default_value')) {
                obj['default_value'] = OrgsCreateOrUpdateCustomPropertyRequestDefaultValue.constructFromObject(data['default_value']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('allowed_values')) {
                obj['allowed_values'] = ApiClient.convertToType(data['allowed_values'], ['String']);
            }
            if (data.hasOwnProperty('values_editable_by')) {
                obj['values_editable_by'] = ApiClient.convertToType(data['values_editable_by'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrgCustomProperty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrgCustomProperty</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrgCustomProperty.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['property_name'] && !(typeof data['property_name'] === 'string' || data['property_name'] instanceof String)) {
            throw new Error("Expected the field `property_name` to be a primitive type in the JSON string but got " + data['property_name']);
        }
        // ensure the json data is a string
        if (data['value_type'] && !(typeof data['value_type'] === 'string' || data['value_type'] instanceof String)) {
            throw new Error("Expected the field `value_type` to be a primitive type in the JSON string but got " + data['value_type']);
        }
        // validate the optional field `default_value`
        if (data['default_value']) { // data not null
          OrgsCreateOrUpdateCustomPropertyRequestDefaultValue.validateJSON(data['default_value']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_values'])) {
            throw new Error("Expected the field `allowed_values` to be an array in the JSON data but got " + data['allowed_values']);
        }
        // ensure the json data is a string
        if (data['values_editable_by'] && !(typeof data['values_editable_by'] === 'string' || data['values_editable_by'] instanceof String)) {
            throw new Error("Expected the field `values_editable_by` to be a primitive type in the JSON string but got " + data['values_editable_by']);
        }

        return true;
    }


}

OrgCustomProperty.RequiredProperties = ["property_name", "value_type"];

/**
 * The name of the property
 * @member {String} property_name
 */
OrgCustomProperty.prototype['property_name'] = undefined;

/**
 * The type of the value for the property
 * @member {module:model/OrgCustomProperty.ValueTypeEnum} value_type
 */
OrgCustomProperty.prototype['value_type'] = undefined;

/**
 * Whether the property is required.
 * @member {Boolean} required
 */
OrgCustomProperty.prototype['required'] = undefined;

/**
 * @member {module:model/OrgsCreateOrUpdateCustomPropertyRequestDefaultValue} default_value
 */
OrgCustomProperty.prototype['default_value'] = undefined;

/**
 * Short description of the property
 * @member {String} description
 */
OrgCustomProperty.prototype['description'] = undefined;

/**
 * An ordered list of the allowed values of the property. The property can have up to 200 allowed values.
 * @member {Array.<String>} allowed_values
 */
OrgCustomProperty.prototype['allowed_values'] = undefined;

/**
 * Who can edit the values of the property
 * @member {module:model/OrgCustomProperty.ValuesEditableByEnum} values_editable_by
 */
OrgCustomProperty.prototype['values_editable_by'] = undefined;





/**
 * Allowed values for the <code>value_type</code> property.
 * @enum {String}
 * @readonly
 */
OrgCustomProperty['ValueTypeEnum'] = {

    /**
     * value: "string"
     * @const
     */
    "string": "string",

    /**
     * value: "single_select"
     * @const
     */
    "single_select": "single_select"
};


/**
 * Allowed values for the <code>values_editable_by</code> property.
 * @enum {String}
 * @readonly
 */
OrgCustomProperty['ValuesEditableByEnum'] = {

    /**
     * value: "org_actors"
     * @const
     */
    "actors": "org_actors",

    /**
     * value: "org_and_repo_actors"
     * @const
     */
    "and_repo_actors": "org_and_repo_actors"
};



export default OrgCustomProperty;

