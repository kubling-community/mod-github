/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 1.1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OidcCustomSub from '../model/OidcCustomSub';

/**
* Oidc service.
* @module api/OidcApi
* @version 1.1.4
*/
export default class OidcApi {

    /**
    * Constructs a new OidcApi. 
    * @alias module:api/OidcApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the oidcGetOidcCustomSubTemplateForOrg operation.
     * @callback module:api/OidcApi~oidcGetOidcCustomSubTemplateForOrgCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OidcCustomSub} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the customization template for an OIDC subject claim for an organization
     * Gets the customization template for an OpenID Connect (OIDC) subject claim.  OAuth app tokens and personal access tokens (classic) need the `read:org` scope to use this endpoint.
     * @param {String} org The organization name. The name is not case sensitive.
     * @param {module:api/OidcApi~oidcGetOidcCustomSubTemplateForOrgCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OidcCustomSub}
     */
    oidcGetOidcCustomSubTemplateForOrg(org, callback) {
      let postBody = null;
      // verify the required parameter 'org' is set
      if (org === undefined || org === null) {
        throw new Error("Missing the required parameter 'org' when calling oidcGetOidcCustomSubTemplateForOrg");
      }

      let pathParams = {
        'org': org
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OidcCustomSub;
      return this.apiClient.callApi(
        '/orgs/{org}/actions/oidc/customization/sub', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oidcUpdateOidcCustomSubTemplateForOrg operation.
     * @callback module:api/OidcApi~oidcUpdateOidcCustomSubTemplateForOrgCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set the customization template for an OIDC subject claim for an organization
     * Creates or updates the customization template for an OpenID Connect (OIDC) subject claim.  OAuth app tokens and personal access tokens (classic) need the `write:org` scope to use this endpoint.
     * @param {String} org The organization name. The name is not case sensitive.
     * @param {module:model/OidcCustomSub} oidcCustomSub 
     * @param {module:api/OidcApi~oidcUpdateOidcCustomSubTemplateForOrgCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    oidcUpdateOidcCustomSubTemplateForOrg(org, oidcCustomSub, callback) {
      let postBody = oidcCustomSub;
      // verify the required parameter 'org' is set
      if (org === undefined || org === null) {
        throw new Error("Missing the required parameter 'org' when calling oidcUpdateOidcCustomSubTemplateForOrg");
      }
      // verify the required parameter 'oidcCustomSub' is set
      if (oidcCustomSub === undefined || oidcCustomSub === null) {
        throw new Error("Missing the required parameter 'oidcCustomSub' when calling oidcUpdateOidcCustomSubTemplateForOrg");
      }

      let pathParams = {
        'org': org
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/orgs/{org}/actions/oidc/customization/sub', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
